{"version":3,"file":"src_block-widget-terms_Edit_tsx.js","mappings":"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kB,EAMlB,SANkB,EAOlB,SAPkB,EAQlB,SARkB,EASlB,SATkB,EAUlB,SAVkB,EAWlB,SAXkB,EAYlB,SAZkB,EAalB,SAbkB,EAclB,SAdkB,EAelB,SAfkB,EAgBlB,SAhBkB,EAiBlB,SAjBkB,EAkBlB,SAlBkB,EAmBlB,SAnBkB,EAoBlB,SApBkB,EAqBlB,SArBkB,EAsBlB,SAtBkB,EAuBlB,SAvBkB,EAwBlB,SAxBkB,EAyBlB,SAzBkB,EA0BlB,SA1BkB,CAAnB,EA6BA;;AACA,IAAIC,yBAAyB,GAAI;AACjiHA;;AACA,IAAIE,yBAAyB,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAzBA,EA2BA;;AACA,IAAID,0BAA0B,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAhBA;;;;;;;;;;;;;;;;AC5KA;AAKA,MAAMG,6BAA6B,GAAI;AACvC;AACA,0CAA0CW,MAAM,CAACC,eAAP,CAAuBC,oBAAqB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOjB,sEAA0B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnCA;AAqCA,MAAMK,+BAA+B,GAAI;AACzC;AACA,0CAA0CU,MAAM,CAACC,eAAP,CAAuBC,oBAAqB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,YAAYjB,sEAA0B;AACtC;AACA,CAXA,EAaA;;AAEA,MAAMQ,kCAAkC,GAAI;AAC5C;AACA,0CAA0CO,MAAM,CAACC,eAAP,CAAuBC,oBAAqB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQhB,uEAA2B;AACnC;AACA,CAtBA;AAwBA,MAAMQ,oCAAoC,GAAI;AAC9C;AACA,0CAA0CM,MAAM,CAACC,eAAP,CAAuBC,oBAAqB;AACtF;AACA;AACA;AACA;AACA;AACA,YAAYhB,uEAA2B;AACvC;AACA,CAVA,EAYA;;AACA,MAAMS,4BAA4B,GAAI;AACtC;AACA,0CAA0CK,MAAM,CAACC,eAAP,CAAuBC,oBAAqB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQhB,uEAA2B;AACnC;AACA,CAtBA;AAwBA,MAAMU,8BAA8B,GAAI;AACxC;AACA,0CAA0CI,MAAM,CAACC,eAAP,CAAuBC,oBAAqB;AACtF;AACA;AACA;AACA;AACA;AACA,WAAWhB,uEAA2B;AACtC;AACA,CAVA,EAYA;;AAEA,IAAIW,sBAAsB,GAAI;AAC9B,2FAA2FG,MAAM,CAACC,eAAP,CAAuBC,oBAAqB;AACvI;AACA,KAAKjB,sEAA0B;AAC/B;AACA,CALA;AAOA,IAAI7B,2BAA2B,GAAI;AACnC,gGAAgG4C,MAAM,CAACC,eAAP,CAAuBC,oBAAqB;AAC5I;AACA,KAAKhB,uEAA2B;AAChC;AACA,CALA;AAMA,IAAIL,qBAAqB,GAAI;AAC7B,0FAA0FmB,MAAM,CAACC,eAAP,CAAuBC,oBAAqB;AACtI;AACA,KAAKhB,uEAA2B;AAChC;AACA,CALA;AAOO,MAAME,IAAI,GAAG;EACnBgB,sCAAsC,EAAEf,6BADrB;EAEnBgB,wCAAwC,EAAEf,+BAFvB;EAInB;EACAgB,2CAA2C,EAAEb,kCAL1B;EAMnBc,6CAA6C,EAAEb,oCAN5B;EAOnBc,qCAAqC,EAAEb,4BAPpB;EAQnBc,uCAAuC,EAAEb,8BARtB;EASnB;EACAe,oCAAoC,EAAEvD,2BAVnB;EAWnBwD,8BAA8B,EAAE/B,qBAXb;EAYnB6B,+BAA+B,EAAEb;AAZd,CAAb;;;;;;;;;;;;;;;;ACxJP;;AAEA,MAAMgB,aAAa,GAAG,QAAuD;EAAA,IAAtD;IAAEC,SAAS,GAAG,EAAd;IAAkBC,IAAI,GAAG,QAAzB;IAAmCC;EAAnC,CAAsD;EAC5E,MAAM;IAAEC,KAAF;IAASxC,IAAT;IAAeyC,IAAf;IAAqBC,cAArB;IAAqCC,UAArC;IAAiD/C;EAAjD,IAAwD2C,YAA9D;EACA,MAAM;IAAEK,KAAF;IAASC;EAAT,IAA2BH,cAAjC;EAEA,OACC;IACC,SAAS,EAAG,uCAAsCL,SAAU,EAD7D;IAEC,cAAW;EAFZ,GAIC;IACC,SAAS,EAAG,iBACXC,IAAI,KAAK,OAAT,GAAmB,WAAnB,GAAiC,WACjC;EAHF,GAKE,CAAAO,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEC,SAAf,KACA;IACC,SAAS,EAAC,uCADX;IAEC,GAAG,EAAED,aAAF,aAAEA,aAAF,uBAAEA,aAAa,CAAEC;EAFrB,EANF,CAJD,EAgBC,+EACC;IACC,SAAS,EAAG,GACXR,IAAI,KAAK,OAAT,GAAmB,SAAnB,GAA+B,WAC/B;EAHF,GAKEtC,IALF,CADD,EAQC;IACC,SAAS,EAAG,GACXsC,IAAI,KAAK,OAAT,GAAmB,SAAnB,GAA+B,SAC/B;EAHF,GAKEE,KAAK,IAAI,CALX,cARD,CAhBD,CADD;AAmCA,CAvCD;;AAyCA,+DAAeJ,aAAf;;;;;;;;;;;;;;;;AC3CA;;AAEA,MAAMW,GAAG,GAAG,QAAoD;EAAA,IAAnD;IAAEV,SAAS,GAAG,EAAd;IAAkBW,OAAlB;IAA2BC,SAAS,GAAG;EAAvC,CAAmD;EAC/D,MAAM;IAAET,KAAF;IAASxC,IAAT;IAAeyC;EAAf,IAAwBO,OAA9B;EAEA,OACC;IACC,SAAS,EAAG,8NAA6NX,SAAU,EADpP;IAEC,cAAW,KAFZ;IAGC,IAAI,EAAEI;EAHP,GAKG,GAAEzC,IAAK,EALV,EAME,CAACiD,SAAD,IAAc;IAAM,SAAS,EAAC;EAAhB,SAAyCT,KAAzC,MANhB,CADD;AAUA,CAbD;;AAeA,+DAAeO,GAAf;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;;AAEA,MAAM9G,gBAAgB,GAAG,QAKnB;EAAA,IALoB;IACzBoG,SAAS,GAAG,oCADa;IAEzBpF,OAAO,GAAG,EAFe;IAGzBD,YAAY,GAAG,OAHU;IAIzBF;EAJyB,CAKpB;;EACL,MAAMqG,UAAU,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;IACnC,QAAQrG,YAAR;MACC,KAAK,OAAL;QACC,OACC,kEAAC,oEAAD;UACC,SAAS,EAAC,2DADX;UAEC,GAAG,EAAEqG,KAFN;UAGC,YAAY,EAAED,IAAI,CAACvD,IAHpB;UAIC,IAAI,EAAC;QAJN,EADD;;MAQD,KAAK,UAAL;QACC,OAAO,kEAAC,gDAAD;UAAK,SAAS,EAAC,WAAf;UAA2B,GAAG,EAAEwD,KAAhC;UAAuC,OAAO,EAAED,IAAI,CAACvD;QAArD,EAAP;;MAED;QACC,OAAO,IAAP;IAdF;EAgBA,CAjBD;;EAmBA,OACC;IACC,SAAS,EAAG,oDAAmDwC,SAAU,EAD1E;IAEC,cAAW;EAFZ,GAIC,kEAAC,sEAAD;IAAgB,KAAK,EAAEpF;EAAvB,EAJD,EAKC;IAAK,SAAS,EAAC;EAAf,GACC;IACC,SAAS,EAAG,SACXD,YAAY,KAAK,OAAjB,GACG,8DADH,GAEG,sBACH;EALF,GAOEF,UAAU,CAAC4C,GAAX,CAAeyD,UAAf,CAPF,CADD,CALD,CADD;AAmBA,CA5CD;;AA8CA,+DAAelH,gBAAf;;;;;;;;;;;;;;;;ACnDA;;AAEA,MAAMiH,cAAc,GAAG,QAKjB;EAAA,IALkB;IACvBb,SAAS,GAAG,EADW;IAEvBiB,KAFuB;IAGvBC,YAHuB;IAIvBC;EAJuB,CAKlB;EACL,OACC;IACC,SAAS,EAAG,sHAAqHnB,SAAU,EAD5I;IAEC,cAAW;EAFZ,GAIC;IAAI,SAAS,EAAC;EAAd,GACEiB,KADF,CAJD,CADD;AAmBA,CAzBD;;AA2BA,+DAAeJ,cAAf;;;;;;;;;;;;;;;;;AC5BA;AACA;AA0Ce,SAAS/G,eAAT,CAAyBG,UAAzB,EAAgE;EAAA;;EAC9E,MAAM;IACLG,YADK;IAELC,aAFK;IAGLC,KAHK;IAILC,OAJK;IAKLC,UALK;IAMLC,UANK;IAOLC;EAPK,IAQFT,UARJ,CAD8E,CAU9E;;EACA,IAAI8C,iBAAiB,GAAG,EAAxB;EACA,IAAIlC,sBAAsB,GAAG,EAA7B;EACA,IAAIK,SAAS,GAAG,EAAhB,CAb8E,CAc9E;EAEA;;EACA,IAAIV,UAAU,KAAK,UAAnB,EAA+B;IAC9B,IAAIJ,YAAY,KAAK,WAArB,EAAkC;MACjCc,SAAS,GAAG;QACXZ,KADW;QAEX+G,OAAO,EAAE9G,OAFE;QAGX+G,KAAK,EAAEC,MAAM,CAAClH,aAAD;MAHF,CAAZ;MAKA0C,iBAAiB,GAAG4B,kFAApB;MACA9D,sBAAsB,GAAG,oCAAzB;IACA,CARD,MAQO;MACNK,SAAS,GAAG;QACXsG,aAAa,EAAE,CAAC/G,UAAU,IAAI,EAAf,EAAmB4C,GAAnB,CAAwBC,IAAD,IAAUA,IAAI,CAAC9B,KAAtC;MADJ,CAAZ;MAGAuB,iBAAiB,GAAG6B,oFAApB;MACA/D,sBAAsB,GAAG,sCAAzB;IACA;EACD,CAjC6E,CAmC9E;;;EACA,IAAIL,UAAU,KAAK,KAAnB,EAA0B;IACzB,IAAIJ,YAAY,KAAK,WAArB,EAAkC;MACjCc,SAAS,GAAG;QACXZ,KADW;QAEX+G,OAAO,EAAE9G,OAFE;QAGX+G,KAAK,EAAEC,MAAM,CAAClH,aAAD;MAHF,CAAZ;MAKA0C,iBAAiB,GAAG8B,4EAApB;MACAhE,sBAAsB,GAAG,8BAAzB;IACA,CARD,MAQO;MACNK,SAAS,GAAG;QAAEsG,aAAa,EAAE,CAAC9G,IAAI,IAAI,EAAT,EAAa2C,GAAb,CAAkBC,IAAD,IAAUA,IAAI,CAAC9B,KAAhC;MAAjB,CAAZ;MACAuB,iBAAiB,GAAG+B,8EAApB;MACAjE,sBAAsB,GAAG,gCAAzB;IACA;EACD,CAlD6E,CAoD9E;;;EACA,MAAMmC,QAAQ,GAAGb,+CAAI;AACtB,IAAIY,iBAAkB;AACtB,EAFC;EAGA,MAAM;IAAE9B,OAAF;IAAWD,KAAX;IAAkBF;EAAlB,IAA2BsG,wDAAQ,CAAyBpE,QAAzB,EAAmC;IAC3E9B;EAD2E,CAAnC,CAAzC;EAIA,MAAMH,SAAS,GAAG,CAAAD,IAAI,SAAJ,IAAAA,IAAI,WAAJ,0BAAAA,IAAI,CAAEJ,IAAN,0DAAY0C,KAAZ,MAAqBtC,IAArB,aAAqBA,IAArB,2CAAqBA,IAAI,CAAEL,UAA3B,qDAAqB,iBAAkB2C,KAAvC,KAAgD,EAAlE;EAEA,OAAO;IACNL,iBADM;IACa;IACnBlC,sBAFM;IAGNK,SAHM;IAIND,OAJM;IAKND,KALM;IAMNF,IANM;IAONC;EAPM,CAAP;AASA","sources":["webpack://ncmaz-core/./src/block-widget-terms/Edit.tsx","webpack://ncmaz-core/./src/components/InputSearchCategories.tsx","webpack://ncmaz-core/./src/components/InputSearchTags.tsx","webpack://ncmaz-core/./src/components/SelectOrder.tsx","webpack://ncmaz-core/./src/contains/common.ts","webpack://ncmaz-core/./src/contains/contants.ts","webpack://ncmaz-core/./src/contains/contantsCommon.ts","webpack://ncmaz-core/./src/contains/contantsPLL.ts","webpack://ncmaz-core/./src/frontend-components/CardCategory1/CardCategory1.tsx","webpack://ncmaz-core/./src/frontend-components/Tag/Tag.tsx","webpack://ncmaz-core/./src/frontend-components/WidgetCategories/WidgetCategories.tsx","webpack://ncmaz-core/./src/frontend-components/WidgetHeading1/WidgetHeading1.tsx","webpack://ncmaz-core/./src/hooks/useTermGqlQuery.ts"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { __ } from \"@wordpress/i18n\";\r\nimport InputSearchCategories from \"../components/InputSearchCategories\";\r\nimport InputSearchTags from \"../components/InputSearchTags\";\r\nimport {\r\n\tTextControl,\r\n\tPanel,\r\n\tPanelBody,\r\n\tPanelRow,\r\n\tRadioControl,\r\n\tSelectControl,\r\n\tSpinner,\r\n\tRangeControl,\r\n} from \"@wordpress/components\";\r\nimport { InspectorControls, useBlockProps } from \"@wordpress/block-editor\";\r\nimport SelectOrder from \"../components/SelectOrder\";\r\nimport WidgetCategories from \"../frontend-components/WidgetCategories/WidgetCategories\";\r\nimport { BlockTermAttributesCommon } from \"../block-terms-slider/Edit\";\r\nimport { EditProps } from \"../block-magazine/Edit\";\r\nimport {\r\n\tOPTIONS_FILTER_DATA_BY,\r\n\tValueOfOptionFilterDataBy,\r\n} from \"../contains/common\";\r\nimport useTermGqlQuery from \"../hooks/useTermGqlQuery\";\r\n\r\ninterface Props extends BlockTermAttributesCommon {}\r\n\r\nexport default function Edit(props: EditProps<Props>) {\r\n\tconst { attributes, setAttributes, clientId } = props;\r\n\t//\r\n\tconst {\r\n\t\tfilterDataBy,\r\n\t\tnumberPerPage,\r\n\t\torder,\r\n\t\torderBy,\r\n\t\ttypeOfTerm,\r\n\t\tcategories,\r\n\t\ttags,\r\n\t\t//\r\n\t\ttermCardName,\r\n\t\theading,\r\n\t} = attributes;\r\n\r\n\t//\r\n\r\n\tconst {\r\n\t\tGQL_QUERY__string_text,\r\n\t\tdata,\r\n\t\tdataLists,\r\n\t\terror,\r\n\t\tloading,\r\n\t\tvariables,\r\n\t} = useTermGqlQuery(attributes);\r\n\r\n\t// ---- SAVE graphQLvariables ----\r\n\tuseEffect(() => {\r\n\t\tif (!data) return;\r\n\t\tsetAttributes({\r\n\t\t\tgraphQLvariables: {\r\n\t\t\t\tvariables,\r\n\t\t\t\tqueryString: GQL_QUERY__string_text,\r\n\t\t\t},\r\n\t\t\texpectedNumberResults: dataLists.length || numberPerPage,\r\n\t\t});\r\n\t}, [data]);\r\n\r\n\t//\r\n\tconst handleChangeFilterDataBy = (value: ValueOfOptionFilterDataBy) => {\r\n\t\tsetAttributes({ filterDataBy: value });\r\n\r\n\t\tif (value === \"by_filter\") {\r\n\t\t\tsetAttributes({ categories: [], tags: [] });\r\n\t\t}\r\n\t};\r\n\tconst handleChangeRadioTypeOfTerm = (typeOfTerm: \"category\" | \"tag\") => {\r\n\t\tsetAttributes({ typeOfTerm });\r\n\t\tif (typeOfTerm === \"category\") {\r\n\t\t\tsetAttributes({ tags: [] });\r\n\t\t}\r\n\t\tif (typeOfTerm === \"tag\") {\r\n\t\t\tsetAttributes({ categories: [] });\r\n\t\t}\r\n\t};\r\n\t//\r\n\r\n\tconst renderFilterPostsContent = () => {\r\n\t\tif (filterDataBy === \"by_specific\") {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"w-full space-y-2.5\">\r\n\t\t\t\t\t{typeOfTerm === \"category\" && (\r\n\t\t\t\t\t\t<InputSearchCategories\r\n\t\t\t\t\t\t\tdefaultValue={categories}\r\n\t\t\t\t\t\t\tonChange={(categories) => setAttributes({ categories })}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{/* ------- */}\r\n\t\t\t\t\t{typeOfTerm === \"tag\" && (\r\n\t\t\t\t\t\t<InputSearchTags\r\n\t\t\t\t\t\t\tdefaultValue={tags}\r\n\t\t\t\t\t\t\tonChange={(tags) => setAttributes({ tags })}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"w-full space-y-2.5\">\r\n\t\t\t\t<SelectControl\r\n\t\t\t\t\tlabel={__(\"OrderBy\", \"ncmaz-core\")}\r\n\t\t\t\t\tvalue={orderBy}\r\n\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t{ label: \"COUNT\", value: \"COUNT\" },\r\n\t\t\t\t\t\t{ label: \"NAME\", value: \"NAME\" },\r\n\t\t\t\t\t\t{ label: \"TERM_GROUP\", value: \"TERM_GROUP\" },\r\n\t\t\t\t\t\t{ label: \"TERM_ID\", value: \"TERM_ID\" },\r\n\t\t\t\t\t\t{ label: \"TERM_ORDER\", value: \"TERM_ORDER\" },\r\n\t\t\t\t\t]}\r\n\t\t\t\t\tonChange={(orderBy) => setAttributes({ orderBy })}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t{/* ------- */}\r\n\t\t\t\t<SelectOrder\r\n\t\t\t\t\tdefaultValue={order}\r\n\t\t\t\t\tonChange={(order) => setAttributes({ order })}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t{/* ------- */}\r\n\t\t\t\t<div className=\"w-full space-y-1\">\r\n\t\t\t\t\t<legend>{__(\"Number per page\", \"ncmaz-core\")}</legend>\r\n\t\t\t\t\t<RangeControl\r\n\t\t\t\t\t\tonChange={(numberPerPage) =>\r\n\t\t\t\t\t\t\tsetAttributes({ numberPerPage: numberPerPage })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmin={4}\r\n\t\t\t\t\t\tmax={30}\r\n\t\t\t\t\t\tvalue={numberPerPage}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tconst renderGeneralSetting = () => {\r\n\t\treturn (\r\n\t\t\t<div className=\"space-y-2.5\">\r\n\t\t\t\t<SelectControl\r\n\t\t\t\t\tlabel={__(\"Choose type of card\", \"ncmaz-core\")}\r\n\t\t\t\t\tvalue={termCardName}\r\n\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t{ label: \"Term card 1\", value: \"card1\" },\r\n\t\t\t\t\t\t{ label: \"Term card 2\", value: \"tag-card\" },\r\n\t\t\t\t\t]}\r\n\t\t\t\t\tonChange={(termCardName) => {\r\n\t\t\t\t\t\tsetAttributes({ termCardName });\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<TextControl\r\n\t\t\t\t\tlabel={__(\"Heading\", \"ncmaz-core\")}\r\n\t\t\t\t\tvalue={heading}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tonChange={(heading) => setAttributes({ heading })}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tconst renderSidebarSettings = () => {\r\n\t\treturn (\r\n\t\t\t<InspectorControls key=\"setting\">\r\n\t\t\t\t<div data-type=\"ncmaz-core/sidebar-settings\">\r\n\t\t\t\t\t<Panel header=\"Section settings\">\r\n\t\t\t\t\t\t<PanelBody title=\"General Settings\">\r\n\t\t\t\t\t\t\t<PanelRow>{renderGeneralSetting()}</PanelRow>\r\n\t\t\t\t\t\t</PanelBody>\r\n\t\t\t\t\t\t<PanelBody initialOpen={false} title=\"Filter data settings\">\r\n\t\t\t\t\t\t\t<PanelRow>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<RadioControl\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Type of Term\"\r\n\t\t\t\t\t\t\t\t\t\tselected={typeOfTerm}\r\n\t\t\t\t\t\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t\t\t\t\t\t{ label: \"Category\", value: \"category\" },\r\n\t\t\t\t\t\t\t\t\t\t\t{ label: \"Tag\", value: \"tag\" },\r\n\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleChangeRadioTypeOfTerm}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<div className=\"border-b border-gray-600 my-2\"></div>\r\n\t\t\t\t\t\t\t\t\t<RadioControl\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Terms query by\"\r\n\t\t\t\t\t\t\t\t\t\tselected={filterDataBy}\r\n\t\t\t\t\t\t\t\t\t\toptions={OPTIONS_FILTER_DATA_BY}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleChangeFilterDataBy}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</PanelRow>\r\n\t\t\t\t\t\t\t<div className=\"border-b border-gray-600 mt-3 mb-4\"></div>\r\n\t\t\t\t\t\t\t<PanelRow>{renderFilterPostsContent()}</PanelRow>\r\n\t\t\t\t\t\t</PanelBody>\r\n\t\t\t\t\t</Panel>\r\n\t\t\t\t</div>\r\n\t\t\t</InspectorControls>\r\n\t\t);\r\n\t};\r\n\r\n\tconst renderPreviewContent = () => {\r\n\t\treturn (\r\n\t\t\t<WidgetCategories\r\n\t\t\t\ttermCardName={termCardName}\r\n\t\t\t\tcategories={dataLists}\r\n\t\t\t\theading={heading}\r\n\t\t\t/>\r\n\t\t);\r\n\t};\r\n\r\n\t//\r\n\treturn (\r\n\t\t<div {...useBlockProps()}>\r\n\t\t\t{renderSidebarSettings()}\r\n\r\n\t\t\t{renderPreviewContent()}\r\n\r\n\t\t\t{loading && <Spinner />}\r\n\t\t\t{error && (\r\n\t\t\t\t<pre className=\"text-xs text-red-500\">\r\n\t\t\t\t\t<code>{JSON.stringify(error)}</code>\r\n\t\t\t\t</pre>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { __ } from \"@wordpress/i18n\";\r\nimport _ from \"lodash\";\r\nimport { gql, useLazyQuery } from \"@apollo/client\";\r\nimport Select from \"react-select\";\r\nimport { GQL_QUERY_SEARCH_CATEGORIES } from \"../contains/contants\";\r\n\r\nconst InputSearchCategories = ({ onChange, defaultValue = [] }) => {\r\n\tconst [selected, setSelected] = useState(defaultValue);\r\n\tconst [searchContent, setSearchContent] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tonChange && onChange(selected);\r\n\t}, [selected]);\r\n\r\n\t//\r\n\tuseEffect(() => {\r\n\t\tsearchContent && loadGreeting();\r\n\t}, [searchContent]);\r\n\tconst hanleChangeSelect = (selected) => setSelected(selected);\r\n\r\n\t//\r\n\tlet GQL_QUERY__string = GQL_QUERY_SEARCH_CATEGORIES;\r\n\tconst gqlQuery = gql`\r\n\t\t${GQL_QUERY__string}\r\n\t`;\r\n\tconst [\r\n\t\tloadGreeting,\r\n\t\t{ loading, error, data, called },\r\n\t] = useLazyQuery(gqlQuery, { variables: { search: searchContent } });\r\n\r\n\tlet categoriesList = data?.categories?.edges || [];\r\n\tif (categoriesList && categoriesList.length) {\r\n\t\tcategoriesList = categoriesList.map((item) => ({\r\n\t\t\tid: item.node.databaseId,\r\n\t\t\tslug: item.node.slug,\r\n\t\t\tvalue: item.node.databaseId,\r\n\t\t\tlabel: item.node.name,\r\n\t\t\tname: item.node.name,\r\n\t\t}));\r\n\t}\r\n\t//\r\n\tconst handleInputChange = _.debounce(function (e) {\r\n\t\tsetSearchContent(e);\r\n\t}, 200);\r\n\r\n\treturn (\r\n\t\t<div className=\"w-full space-y-1\">\r\n\t\t\t<legend>{__(\"Type and select categories\", \"ncmaz-core\")}</legend>\r\n\t\t\t<Select\r\n\t\t\t\tplaceholder=\"Select categories...\"\r\n\t\t\t\tisMulti\r\n\t\t\t\tonInputChange={handleInputChange}\r\n\t\t\t\tisLoading={loading}\r\n\t\t\t\tvalue={selected}\r\n\t\t\t\tonChange={hanleChangeSelect}\r\n\t\t\t\toptions={categoriesList}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default InputSearchCategories;\r\n","import { useEffect, useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { __ } from \"@wordpress/i18n\";\r\nimport { gql, useLazyQuery } from \"@apollo/client\";\r\nimport Select from \"react-select\";\r\nimport { GQL_QUERY_SEARCH_TAGS } from \"../contains/contants\";\r\n\r\nconst InputSearchTags = ({ onChange, defaultValue = [] }) => {\r\n\tconst [selected, setSelected] = useState(defaultValue);\r\n\tconst [searchContent, setSearchContent] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tonChange && onChange(selected);\r\n\t}, [selected]);\r\n\r\n\t//\r\n\tuseEffect(() => {\r\n\t\tsearchContent && loadGreeting();\r\n\t}, [searchContent]);\r\n\tconst hanleChangeSelect = (selected) => setSelected(selected);\r\n\r\n\t//\r\n\tlet GQL_QUERY__string = GQL_QUERY_SEARCH_TAGS;\r\n\tconst gqlQuery = gql`\r\n\t\t${GQL_QUERY__string}\r\n\t`;\r\n\tconst [\r\n\t\tloadGreeting,\r\n\t\t{ loading, error, data, called },\r\n\t] = useLazyQuery(gqlQuery, { variables: { search: searchContent } });\r\n\r\n\tlet tagsList = data?.tags?.edges || [];\r\n\tif (tagsList && tagsList.length) {\r\n\t\ttagsList = tagsList.map((item) => ({\r\n\t\t\tvalue: item.node.databaseId,\r\n\t\t\tlabel: item.node.name,\r\n\t\t}));\r\n\t}\r\n\t//\r\n\tconst handleInputChange = _.debounce(function (e) {\r\n\t\tsetSearchContent(e);\r\n\t}, 200);\r\n\r\n\treturn (\r\n\t\t<div className=\"w-full space-y-1\">\r\n\t\t\t<legend>{__(\"Type and select tags\", \"ncmaz-core\")}</legend>\r\n\t\t\t<Select\r\n\t\t\t\tplaceholder=\"Select tags...\"\r\n\t\t\t\tisMulti\r\n\t\t\t\tonInputChange={handleInputChange}\r\n\t\t\t\tisLoading={loading}\r\n\t\t\t\tvalue={selected}\r\n\t\t\t\tonChange={hanleChangeSelect}\r\n\t\t\t\toptions={tagsList}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default InputSearchTags;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"@wordpress/element\";\r\nimport { SelectControl } from \"@wordpress/components\";\r\n\r\nconst SelectOrder = ({ onChange, defaultValue = \"DESC\" }) => {\r\n\tconst [order, setOrder] = useState(defaultValue);\r\n\r\n\tuseEffect(() => {\r\n\t\tonChange && onChange(order);\r\n\t}, [order]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<SelectControl\r\n\t\t\t\tlabel=\"Order\"\r\n\t\t\t\tvalue={order}\r\n\t\t\t\toptions={[\r\n\t\t\t\t\t{ label: \"DESC\", value: \"DESC\" },\r\n\t\t\t\t\t{ label: \"ASC\", value: \"ASC\" },\r\n\t\t\t\t]}\r\n\t\t\t\tonChange={setOrder}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SelectOrder;\r\n","export type ValueOfOptionFilterDataBy = \"by_filter\" | \"by_specific\";\r\n\r\nexport interface OptionFilterDataBy {\r\n\tlabel: string;\r\n\tvalue: ValueOfOptionFilterDataBy;\r\n}\r\n\r\nconst OPTIONS_FILTER_DATA_BY: OptionFilterDataBy[] = [\r\n\t{ label: \"Select posts by specific\", value: \"by_specific\" },\r\n\t{ label: \"Select posts by filter\", value: \"by_filter\" },\r\n];\r\n\r\nexport { OPTIONS_FILTER_DATA_BY };\r\n","declare global {\r\n\tvar ncmazcoreJsData: {\r\n\t\tajaxurl: string;\r\n\t\trestUrl: string;\r\n\t\tgraphQLBasePath: string;\r\n\t\timg_empty_png: string;\r\n\t\timg_musicWave_png: string;\r\n\t\thomeURL: string;\r\n\t\tpll_current_language: string | null;\r\n\t\tpll_themeoption_actived: string | null;\r\n\t};\r\n}\r\n\r\nimport {\r\n\tavatarColors,\r\n\tEDGES_POST_COMMONT_FIELDS,\r\n\tEDGES_TERMS_COMMONT_FIELDS,\r\n\tEDGES_USER_COMMONT_FIELDS,\r\n} from \"./contantsCommon\";\r\nimport { PLLs } from \"./contantsPLL\";\r\n\r\nlet GQL_QUERY_GET_POSTS_BY_FILTER = `\r\n  query GQL_QUERY_GET_POSTS_BY_FILTER(\r\n    $field: PostObjectsConnectionOrderbyEnum = AUTHOR\r\n    $order: OrderEnum = ASC\r\n    $categoryIn: [ID] = []\r\n    $tagIn: [ID] = []\r\n    $authorIn: [ID] = []\r\n    $last: Int = null\r\n    $first: Int = 10\r\n    $before: String = \"\"\r\n    $after: String = \"\"\r\n  ) {\r\n    posts(\r\n      where: {\r\n        orderby: { field: $field, order: $order }\r\n        categoryIn: $categoryIn\r\n        tagIn: $tagIn\r\n        authorIn: $authorIn\r\n      }\r\n      last: $last\r\n      first: $first\r\n      before: $before\r\n      after: $after\r\n    ) {\r\n     ${EDGES_POST_COMMONT_FIELDS}\r\n      pageInfo {\r\n        hasNextPage\r\n        hasPreviousPage\r\n        endCursor\r\n        startCursor\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet GQL_QUERY_GET_POSTS_BY_SPECIFIC = `\r\n  query GQL_QUERY_GET_POSTS_BY_SPECIFIC($nameIn: [String] = \"\") {\r\n    posts(where: { nameIn: $nameIn,  orderby: {order: ASC, field: NAME_IN} }) { ${EDGES_POST_COMMONT_FIELDS} }\r\n  }\r\n`;\r\n\r\n// ===================== USERS =================================================\r\n\r\nlet GQL_QUERY_GET_USERS_BY_FILTER = `query GQL_QUERY_GET_USERS_BY_FILTER(\r\n\t$after: String = \"\"\r\n\t$before: String = \"\"\r\n\t$first: Int = 10\r\n\t$last: Int = null\r\n\t$field: UsersConnectionOrderbyEnum = DISPLAY_NAME\r\n\t$order: OrderEnum = ASC\r\n\t$roleIn: [UserRoleEnum] = []\r\n) {\r\n\tusers(\r\n\t\twhere: { orderby: { field: $field, order: $order }, roleIn: $roleIn }\r\n\t\tlast: $last\r\n\t\tfirst: $first\r\n\t\tbefore: $before\r\n\t\tafter: $after\r\n\t) { ${EDGES_USER_COMMONT_FIELDS} }\r\n}`;\r\n\r\nlet GQL_QUERY_GET_USERS_BY_SPECIFIC = `query GQL_QUERY_GET_USERS_BY_SPECIFIC($include: [Int] = null) {\r\n\tusers(where: { include: $include }) { ${EDGES_USER_COMMONT_FIELDS} }\r\n}`;\r\n\r\n// ===================== TERMS - TAGS | CATEGORIES =========================================\r\n\r\nlet GQL_QUERY_GET_CATEGORIES_BY_FILTER = `\r\n\tquery GQL_QUERY_GET_CATEGORIES_BY_FILTER(\r\n\t\t$order: OrderEnum = ASC\r\n\t\t$orderby: TermObjectsConnectionOrderbyEnum = COUNT\r\n\t\t$after: String = null\r\n\t\t$before: String = null\r\n\t\t$first: Int = 10\r\n\t\t$last: Int = null\r\n\t) {\r\n\t\tcategories(\r\n\t\t\twhere: { order: $order, orderby: $orderby, hideEmpty: true  }\r\n\t\t\tfirst: $first\r\n\t\t\tbefore: $before\r\n\t\t\tafter: $after\r\n\t\t\tlast: $last\r\n\t\t) { ${EDGES_TERMS_COMMONT_FIELDS} }\r\n\t}\r\n`;\r\n\r\nlet GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC = `\r\n\tquery GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC($termTaxonomId: [ID] = \"\") {\r\n\t\tcategories(where: { termTaxonomId: $termTaxonomId }) { ${EDGES_TERMS_COMMONT_FIELDS} }\r\n\t}\r\n`;\r\n\r\n// TAGS\r\nlet GQL_QUERY_GET_TAGS_BY_FILTER = `\r\n\tquery GQL_QUERY_GET_TAGS_BY_FILTER(\r\n\t\t$order: OrderEnum = ASC\r\n\t\t$orderby: TermObjectsConnectionOrderbyEnum = COUNT\r\n\t\t$after: String = null\r\n\t\t$before: String = null\r\n\t\t$first: Int = 10\r\n\t\t$last: Int = null\r\n\t) {\r\n\t\ttags(\r\n\t\t\twhere: { order: $order, orderby: $orderby, hideEmpty: true }\r\n\t\t\tfirst: $first\r\n\t\t\tbefore: $before\r\n\t\t\tafter: $after\r\n\t\t\tlast: $last\r\n\t\t) { ${EDGES_TERMS_COMMONT_FIELDS} }\r\n\t}\r\n`;\r\n\r\nlet GQL_QUERY_GET_TAGS_BY_SPECIFIC = `\r\n\tquery GQL_QUERY_GET_TAGS_BY_SPECIFIC($termTaxonomId: [ID] = \"\") {\r\n\t\ttags(where: { termTaxonomId: $termTaxonomId }) { ${EDGES_TERMS_COMMONT_FIELDS} }\r\n\t}\r\n`;\r\n\r\n// SEARCH\r\nlet GQL_QUERY_SEARCH_POSTS = `\r\n  query GQL_QUERY_SEARCH_POSTS($search: String = \"\") {\r\n    posts(where: {search: $search})\r\n\t{ ${EDGES_POST_COMMONT_FIELDS} }\r\n  }\r\n`;\r\n\r\nlet GQL_QUERY_SEARCH_USER = `\r\n  query GQL_QUERY_SEARCH_USER($search: String = \"\") {\r\n\tusers(where: {search: $search})\r\n\t{ ${EDGES_USER_COMMONT_FIELDS} }\r\n  }\r\n`;\r\n\r\nlet GQL_QUERY_SEARCH_CATEGORIES = `\r\n  query GQL_QUERY_SEARCH_CATEGORIES($search: String = \"\") {\r\n\tcategories(where: {search: $search})\r\n\t{ ${EDGES_TERMS_COMMONT_FIELDS} }\r\n  }\r\n`;\r\n\r\nlet GQL_QUERY_SEARCH_TAGS = `\r\n  query GQL_QUERY_SEARCH_TAGS($search: String = \"\") {\r\n\ttags(where: {search: $search})\r\n\t{ ${EDGES_TERMS_COMMONT_FIELDS} }\r\n  }\r\n`;\r\n\r\n// CHECK ENABLE POLYLANG\r\nlet IS_ENABLE_PLL =\r\n\t!!window.ncmazcoreJsData.pll_current_language &&\r\n\t!!window.ncmazcoreJsData.pll_themeoption_actived;\r\n//\r\nif (IS_ENABLE_PLL) {\r\n\tGQL_QUERY_GET_POSTS_BY_FILTER = PLLs.PLL_GET__GQL_QUERY_GET_POSTS_BY_FILTER;\r\n\tGQL_QUERY_GET_POSTS_BY_SPECIFIC =\r\n\t\tPLLs.PLL_GET__GQL_QUERY_GET_POSTS_BY_SPECIFIC;\r\n\tGQL_QUERY_GET_CATEGORIES_BY_FILTER =\r\n\t\tPLLs.PLL_GET__GQL_QUERY_GET_CATEGORIES_BY_FILTER;\r\n\tGQL_QUERY_GET_CATEGORIES_BY_SPECIFIC =\r\n\t\tPLLs.PLL_GET__GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC;\r\n\tGQL_QUERY_GET_TAGS_BY_FILTER = PLLs.PLL_GET__GQL_QUERY_GET_TAGS_BY_FILTER;\r\n\tGQL_QUERY_GET_TAGS_BY_SPECIFIC = PLLs.PLL_GET__GQL_QUERY_GET_TAGS_BY_SPECIFIC;\r\n\t//\r\n\tGQL_QUERY_SEARCH_POSTS = PLLs.PLL_GET__GQL_QUERY_SEARCH_POSTS;\r\n\tGQL_QUERY_SEARCH_CATEGORIES = PLLs.PLL_GET__GQL_QUERY_SEARCH_CATEGORIES;\r\n\tGQL_QUERY_SEARCH_TAGS = PLLs.PLL_GET__GQL_QUERY_SEARCH_TAGS;\r\n}\r\n\r\nexport {\r\n\tavatarColors,\r\n\t//\r\n\tGQL_QUERY_SEARCH_POSTS,\r\n\tGQL_QUERY_SEARCH_USER,\r\n\t//\r\n\tEDGES_POST_COMMONT_FIELDS,\r\n\tGQL_QUERY_GET_POSTS_BY_FILTER,\r\n\tGQL_QUERY_GET_POSTS_BY_SPECIFIC,\r\n\t//\r\n\tEDGES_USER_COMMONT_FIELDS,\r\n\tGQL_QUERY_GET_USERS_BY_FILTER,\r\n\tGQL_QUERY_GET_USERS_BY_SPECIFIC,\r\n\t//\r\n\tEDGES_TERMS_COMMONT_FIELDS,\r\n\tGQL_QUERY_GET_CATEGORIES_BY_FILTER,\r\n\tGQL_QUERY_GET_CATEGORIES_BY_SPECIFIC,\r\n\tGQL_QUERY_GET_TAGS_BY_FILTER,\r\n\tGQL_QUERY_GET_TAGS_BY_SPECIFIC,\r\n\t//\r\n\tGQL_QUERY_SEARCH_CATEGORIES,\r\n\tGQL_QUERY_SEARCH_TAGS,\r\n};\r\n","let avatarColors = [\r\n\t\"#ffdd00\",\r\n\t\"#fbb034\",\r\n\t\"#ff4c4c\",\r\n\t\"#c1d82f\",\r\n\t\"#f48924\",\r\n\t\"#7ac143\",\r\n\t\"#30c39e\",\r\n\t\"#06BCAE\",\r\n\t\"#0695BC\",\r\n\t\"#037ef3\",\r\n\t\"#146eb4\",\r\n\t\"#8e43e7\",\r\n\t\"#ea1d5d\",\r\n\t\"#fc636b\",\r\n\t\"#ff6319\",\r\n\t\"#e01f3d\",\r\n\t\"#a0ac48\",\r\n\t\"#00d1b2\",\r\n\t\"#472f92\",\r\n\t\"#388ed1\",\r\n\t\"#a6192e\",\r\n\t\"#4a8594\",\r\n\t\"#7B9FAB\",\r\n\t\"#1393BD\",\r\n\t\"#5E13BD\",\r\n\t\"#E208A7\",\r\n];\r\n\r\n// ===================== POSTS =================================================\r\nlet EDGES_POST_COMMONT_FIELDS = ` edges {\r\n  node {\r\n    id\r\n    link\r\n    author {\r\n      node {\r\n        id\r\n        avatar {\r\n          url\r\n        }\r\n        url\r\n        uri\r\n        username\r\n        name\r\n        slug\r\n        ncUserMeta {\r\n          featuredImage {\r\n            sourceUrl\r\n          }\r\n        }\r\n      }\r\n    }\r\n    categories {\r\n      edges {\r\n        node {\r\n          id\r\n          link\r\n          name\r\n          uri\r\n          slug\r\n          count\r\n          categoryId\r\n          ncTaxonomyMeta {\r\n            color\r\n          }\r\n        }\r\n      }\r\n    }\r\n    commentCount\r\n    date\r\n    excerpt\r\n    featuredImage {\r\n      node {\r\n        id\r\n        altText\r\n        caption\r\n        sourceUrl\r\n      }\r\n    }\r\n    postFormats {\r\n      edges {\r\n        node {\r\n          id\r\n          name\r\n          slug\r\n        }\r\n      }\r\n    }\r\n    postId\r\n    slug\r\n    title\r\n    ncmazVideoUrl {\r\n      fieldGroupName\r\n      videoUrl\r\n    }\r\n    ncmazAudioUrl {\r\n      fieldGroupName\r\n      audioUrl\r\n    }\r\n    ncPostMetaData {\r\n      favoriteButtonShortcode\r\n      readingTimeShortcode\r\n      viewsCount\r\n      fieldGroupName\r\n    }\r\n    ncmazGalleryImgs {\r\n      fieldGroupName\r\n      image1 {\r\n        id\r\n        sourceUrl\r\n      }\r\n      image2 {\r\n        id\r\n        sourceUrl\r\n      }\r\n      image3 {\r\n        id\r\n        sourceUrl\r\n      }\r\n      image4 {\r\n        id\r\n        sourceUrl\r\n      }\r\n      image5 {\r\n        id\r\n        sourceUrl\r\n      }\r\n      image6 {\r\n        id\r\n        sourceUrl\r\n      }\r\n      image7 {\r\n        id\r\n        sourceUrl\r\n      }\r\n      image8 {\r\n        id\r\n        sourceUrl\r\n      }\r\n    }\r\n  }\r\n}`;\r\n\r\n// ===================== USERS =================================================\r\nlet EDGES_USER_COMMONT_FIELDS = `edges {\r\n\tnode {\r\n\t\tid\r\n\t\tname\r\n\t\tusername\r\n\t\tuserId\r\n\t\turl\r\n\t\turi\r\n    ncUserMeta {\r\n\t\t\tcolor\r\n\t\t\tncBio\r\n\t\t\tfeaturedImage {\r\n\t\t\t\tsourceUrl\r\n\t\t\t\tid\r\n\t\t\t}\r\n\t\t\tbackgroundImage {\r\n\t\t\t\tsourceUrl\r\n\t\t\t}\r\n\t\t}\r\n    posts {\r\n      pageInfo {\r\n        total\r\n      }\r\n    }\r\n\t}\r\n}`;\r\n\r\n// ===================== TERMS - TAGS | CATEGORIES =========================================\r\nlet EDGES_TERMS_COMMONT_FIELDS = `edges {\r\n    node {\r\n        id\r\n        slug\r\n        count\r\n        name\r\n        databaseId\r\n        description\r\n        link\r\n        ncTaxonomyMeta {\r\n            color                                     \r\n            featuredImage {\r\n                sourceUrl\r\n            }\r\n        }\r\n    }\r\n}`;\r\n\r\nexport {\r\n\tavatarColors,\r\n\t//\r\n\tEDGES_POST_COMMONT_FIELDS,\r\n\t//\r\n\tEDGES_USER_COMMONT_FIELDS,\r\n\t//\r\n\tEDGES_TERMS_COMMONT_FIELDS,\r\n};\r\n","import {\n\tEDGES_POST_COMMONT_FIELDS,\n\tEDGES_TERMS_COMMONT_FIELDS,\n} from \"./contantsCommon\";\n\nconst GQL_QUERY_GET_POSTS_BY_FILTER = `\n  query GQL_QUERY_GET_POSTS_BY_FILTER(\n    $language: LanguageCodeFilterEnum = ${window.ncmazcoreJsData.pll_current_language}\n    $field: PostObjectsConnectionOrderbyEnum = AUTHOR\n    $order: OrderEnum = ASC\n    $categoryIn: [ID] = []\n    $tagIn: [ID] = []\n    $authorIn: [ID] = []\n    $last: Int = null\n    $first: Int = 10\n    $before: String = \"\"\n    $after: String = \"\"\n  ) {\n    posts(\n      where: {\n        language: $language\n        orderby: { field: $field, order: $order }\n        categoryIn: $categoryIn\n        tagIn: $tagIn\n        authorIn: $authorIn\n      }\n      last: $last\n      first: $first\n      before: $before\n      after: $after\n    ) {\n     ${EDGES_POST_COMMONT_FIELDS}\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        endCursor\n        startCursor\n      }\n    }\n  }\n`;\n\nconst GQL_QUERY_GET_POSTS_BY_SPECIFIC = `\n  query GQL_QUERY_GET_POSTS_BY_SPECIFIC(\n    $language: LanguageCodeFilterEnum = ${window.ncmazcoreJsData.pll_current_language}\n    $nameIn: [String] = \"\"\n    ) {\n    posts(where: {\n      language: $language\n      nameIn: $nameIn\n      orderby: {order: ASC, field: NAME_IN}\n     }) { ${EDGES_POST_COMMONT_FIELDS} }\n  }\n`;\n\n// ===================== TERMS - TAGS | CATEGORIES =========================================\n\nconst GQL_QUERY_GET_CATEGORIES_BY_FILTER = `\n\tquery GQL_QUERY_GET_CATEGORIES_BY_FILTER(\n    $language: LanguageCodeFilterEnum = ${window.ncmazcoreJsData.pll_current_language}\n\t\t$order: OrderEnum = ASC\n\t\t$orderby: TermObjectsConnectionOrderbyEnum = COUNT\n\t\t$after: String = null\n\t\t$before: String = null\n\t\t$first: Int = 10\n\t\t$last: Int = null\n\t) {\n\t\tcategories(\n\t\t\twhere: { \n        language: $language,\n        order: $order,\n        orderby: $orderby \n      }\n\t\t\tfirst: $first\n\t\t\tbefore: $before\n\t\t\tafter: $after\n\t\t\tlast: $last\n\t\t) { ${EDGES_TERMS_COMMONT_FIELDS} }\n\t}\n`;\n\nconst GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC = `\n\tquery GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC(\n    $language: LanguageCodeFilterEnum = ${window.ncmazcoreJsData.pll_current_language}\n    $termTaxonomId: [ID] = \"\"\n    ) {\n\t\tcategories(where: {\n      language: $language\n      termTaxonomId: $termTaxonomId\n     }) { ${EDGES_TERMS_COMMONT_FIELDS} }\n\t}\n`;\n\n// TAGS\nconst GQL_QUERY_GET_TAGS_BY_FILTER = `\n\tquery GQL_QUERY_GET_TAGS_BY_FILTER(\n    $language: LanguageCodeFilterEnum = ${window.ncmazcoreJsData.pll_current_language}\n\t\t$order: OrderEnum = ASC\n\t\t$orderby: TermObjectsConnectionOrderbyEnum = COUNT\n\t\t$after: String = null\n\t\t$before: String = null\n\t\t$first: Int = 10\n\t\t$last: Int = null\n\t) {\n\t\ttags(\n\t\t\twhere: {\n        language: $language \n        order: $order\n        orderby: $orderby \n      }\n\t\t\tfirst: $first\n\t\t\tbefore: $before\n\t\t\tafter: $after\n\t\t\tlast: $last\n\t\t) { ${EDGES_TERMS_COMMONT_FIELDS} }\n\t}\n`;\n\nconst GQL_QUERY_GET_TAGS_BY_SPECIFIC = `\n\tquery GQL_QUERY_GET_TAGS_BY_SPECIFIC(\n    $language: LanguageCodeFilterEnum = ${window.ncmazcoreJsData.pll_current_language}\n    $termTaxonomId: [ID] = \"\"\n    ) {\n\t\ttags(where: {\n      language: $language\n      termTaxonomId: $termTaxonomId\n    }) { ${EDGES_TERMS_COMMONT_FIELDS} }\n\t}\n`;\n\n// SEARCH\n\nlet GQL_QUERY_SEARCH_POSTS = `\n  query GQL_QUERY_SEARCH_POSTS($search: String = \"\", $language: LanguageCodeFilterEnum = ${window.ncmazcoreJsData.pll_current_language}) {\n    posts(where: {search: $search,  language: $language})\n\t{ ${EDGES_POST_COMMONT_FIELDS} }\n  }\n`;\n\nlet GQL_QUERY_SEARCH_CATEGORIES = `\n  query GQL_QUERY_SEARCH_CATEGORIES($search: String = \"\", $language: LanguageCodeFilterEnum = ${window.ncmazcoreJsData.pll_current_language}) {\n\tcategories(where: {language: $language, search: $search})\n\t{ ${EDGES_TERMS_COMMONT_FIELDS} }\n  }\n`;\nlet GQL_QUERY_SEARCH_TAGS = `\n  query GQL_QUERY_SEARCH_TAGS($search: String = \"\", $language: LanguageCodeFilterEnum = ${window.ncmazcoreJsData.pll_current_language}) {\n\ttags(where: {language: $language, search: $search})\n\t{ ${EDGES_TERMS_COMMONT_FIELDS} }\n  }\n`;\n\nexport const PLLs = {\n\tPLL_GET__GQL_QUERY_GET_POSTS_BY_FILTER: GQL_QUERY_GET_POSTS_BY_FILTER,\n\tPLL_GET__GQL_QUERY_GET_POSTS_BY_SPECIFIC: GQL_QUERY_GET_POSTS_BY_SPECIFIC,\n\n\t//\n\tPLL_GET__GQL_QUERY_GET_CATEGORIES_BY_FILTER: GQL_QUERY_GET_CATEGORIES_BY_FILTER,\n\tPLL_GET__GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC: GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC,\n\tPLL_GET__GQL_QUERY_GET_TAGS_BY_FILTER: GQL_QUERY_GET_TAGS_BY_FILTER,\n\tPLL_GET__GQL_QUERY_GET_TAGS_BY_SPECIFIC: GQL_QUERY_GET_TAGS_BY_SPECIFIC,\n\t//\n\tPLL_GET__GQL_QUERY_SEARCH_CATEGORIES: GQL_QUERY_SEARCH_CATEGORIES,\n\tPLL_GET__GQL_QUERY_SEARCH_TAGS: GQL_QUERY_SEARCH_TAGS,\n\tPLL_GET__GQL_QUERY_SEARCH_POSTS: GQL_QUERY_SEARCH_POSTS,\n};\n","import React, { FC } from \"react\";\r\n\r\nconst CardCategory1 = ({ className = \"\", size = \"normal\", taxonomyNode }) => {\r\n\tconst { count, name, link, ncTaxonomyMeta, categoryId, id } = taxonomyNode;\r\n\tconst { color, featuredImage } = ncTaxonomyMeta;\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`nc-CardCategory1  flex items-center ${className}`}\r\n\t\t\tdata-nc-id=\"CardCategory1\"\r\n\t\t>\r\n\t\t\t<div\r\n\t\t\t\tclassName={`flex-shrink-0 ${\r\n\t\t\t\t\tsize === \"large\" ? \"w-20 h-20\" : \"w-12 h-12\"\r\n\t\t\t\t} rounded-lg mr-4 overflow-hidden object-cover bg-gray-400`}\r\n\t\t\t>\r\n\t\t\t\t{featuredImage?.sourceUrl && (\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"w-full h-full object-cover bg-red-400\"\r\n\t\t\t\t\t\tsrc={featuredImage?.sourceUrl}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<h2\r\n\t\t\t\t\tclassName={`${\r\n\t\t\t\t\t\tsize === \"large\" ? \"text-lg\" : \"text-base\"\r\n\t\t\t\t\t} nc-card-title text-neutral-900 dark:text-neutral-100 font-semibold`}\r\n\t\t\t\t>\r\n\t\t\t\t\t{name}\r\n\t\t\t\t</h2>\r\n\t\t\t\t<span\r\n\t\t\t\t\tclassName={`${\r\n\t\t\t\t\t\tsize === \"large\" ? \"text-sm\" : \"text-xs\"\r\n\t\t\t\t\t} block mt-[2px] text-neutral-500 dark:text-neutral-400`}\r\n\t\t\t\t>\r\n\t\t\t\t\t{count || 0} Articles\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CardCategory1;\r\n","import React, { FC } from \"react\";\r\n\r\nconst Tag = ({ className = \"\", tagNode, hideCount = false }) => {\r\n\tconst { count, name, link } = tagNode;\r\n\r\n\treturn (\r\n\t\t<a\r\n\t\t\tclassName={`nc-Tag inline-block bg-white text-sm text-neutral-600 py-2 px-3 rounded-lg border border-neutral-100 md:py-2.5 md:px-4 dark:bg-neutral-700 dark:border-neutral-700 hover:border-neutral-200 dark:hover:border-neutral-6000 ${className}`}\r\n\t\t\tdata-nc-id=\"Tag\"\r\n\t\t\thref={link}\r\n\t\t>\r\n\t\t\t{`${name}`}\r\n\t\t\t{!hideCount && <span className=\"text-xs font-normal\"> ({count})</span>}\r\n\t\t</a>\r\n\t);\r\n};\r\n\r\nexport default Tag;\r\n","import React, { FC } from \"react\";\r\nimport CardCategory1 from \"../CardCategory1/CardCategory1\";\r\nimport Tag from \"../Tag/Tag\";\r\nimport WidgetHeading1 from \"../WidgetHeading1/WidgetHeading1\";\r\n\r\nconst WidgetCategories = ({\r\n\tclassName = \"bg-neutral-100 dark:bg-neutral-800\",\r\n\theading = \"\",\r\n\ttermCardName = \"card1\",\r\n\tcategories,\r\n}) => {\r\n\tconst renderCard = (term, index) => {\r\n\t\tswitch (termCardName) {\r\n\t\t\tcase \"card1\":\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<CardCategory1\r\n\t\t\t\t\t\tclassName=\"p-4 xl:p-5 hover:bg-neutral-200 dark:hover:bg-neutral-700\"\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\ttaxonomyNode={term.node}\r\n\t\t\t\t\t\tsize=\"normal\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\tcase \"tag-card\":\r\n\t\t\t\treturn <Tag className=\"mr-2 mb-2\" key={index} tagNode={term.node} />;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`nc-WidgetCategories rounded-3xl  overflow-hidden ${className}`}\r\n\t\t\tdata-nc-id=\"WidgetCategories\"\r\n\t\t>\r\n\t\t\t<WidgetHeading1 title={heading} />\r\n\t\t\t<div className=\"flow-root\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={`flex  ${\r\n\t\t\t\t\t\ttermCardName === \"card1\"\r\n\t\t\t\t\t\t\t? \"flex-col divide-y divide-neutral-200 dark:divide-neutral-700\"\r\n\t\t\t\t\t\t\t: \"flex-wrap p-4 xl:p-5\"\r\n\t\t\t\t\t}`}\r\n\t\t\t\t>\r\n\t\t\t\t\t{categories.map(renderCard)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default WidgetCategories;\r\n","import React, { FC } from \"react\";\r\n\r\nconst WidgetHeading1 = ({\r\n\tclassName = \"\",\r\n\ttitle,\r\n\tviewAllLabel,\r\n\tviewAllHref,\r\n}) => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`nc-WidgetHeading1 flex items-center justify-between p-4 xl:p-5 border-b border-neutral-200 dark:border-neutral-700 ${className}`}\r\n\t\t\tdata-nc-id=\"WidgetHeading1\"\r\n\t\t>\r\n\t\t\t<h2 className=\"text-lg text-neutral-900 dark:text-neutral-100 font-semibold flex-grow\">\r\n\t\t\t\t{title}\r\n\t\t\t</h2>\r\n\t\t\t{/* {!!viewAllHref && !!viewAllLabel && (\r\n\t\t\t\t<a\r\n\t\t\t\t\tclassName=\"flex-shrink-0 block text-primary-700 dark:text-primary-500 font-semibold text-sm\"\r\n\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\thref={viewAllHref}\r\n\t\t\t\t>\r\n\t\t\t\t\t{viewAllLabel}\r\n\t\t\t\t</a>\r\n\t\t\t)} */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default WidgetHeading1;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport {\r\n\tGQL_QUERY_GET_CATEGORIES_BY_FILTER,\r\n\tGQL_QUERY_GET_CATEGORIES_BY_SPECIFIC,\r\n\tGQL_QUERY_GET_TAGS_BY_FILTER,\r\n\tGQL_QUERY_GET_TAGS_BY_SPECIFIC,\r\n} from \"../contains/contants\";\r\nimport { BlockTermAttributesCommon } from \"../block-terms-slider/Edit\";\r\n\r\nexport interface ListTermsGQLResultData {\r\n\tcategories?: ListTerms;\r\n\ttags?: ListTerms;\r\n}\r\n\r\nexport interface ListTerms {\r\n\tedges: CategoriesEdge2[];\r\n}\r\n\r\nexport interface CategoriesEdge2 {\r\n\tnode: CategoriesNode3;\r\n\t__typename: string;\r\n}\r\n\r\nexport interface CategoriesNode3 {\r\n\tid: string;\r\n\tlink: string;\r\n\tname: string;\r\n\turi: string;\r\n\tslug: string;\r\n\tcount: number;\r\n\tcategoryId: number;\r\n\tncTaxonomyMeta: NcTaxonomyMeta;\r\n\t__typename: string;\r\n}\r\n\r\nexport interface NcTaxonomyMeta {\r\n\tcolor?: string;\r\n\tfeaturedImage?: {\r\n\t\tid: string;\r\n\t\tsourceUrl: string;\r\n\t};\r\n}\r\n\r\nexport default function useTermGqlQuery(attributes: BlockTermAttributesCommon) {\r\n\tconst {\r\n\t\tfilterDataBy,\r\n\t\tnumberPerPage,\r\n\t\torder,\r\n\t\torderBy,\r\n\t\ttypeOfTerm,\r\n\t\tcategories,\r\n\t\ttags,\r\n\t} = attributes;\r\n\t//\r\n\tlet GQL_QUERY__string = \"\";\r\n\tlet GQL_QUERY__string_text = \"\";\r\n\tlet variables = {};\r\n\t//\r\n\r\n\t// CATEGORIES\r\n\tif (typeOfTerm === \"category\") {\r\n\t\tif (filterDataBy === \"by_filter\") {\r\n\t\t\tvariables = {\r\n\t\t\t\torder,\r\n\t\t\t\torderby: orderBy,\r\n\t\t\t\tfirst: Number(numberPerPage),\r\n\t\t\t};\r\n\t\t\tGQL_QUERY__string = GQL_QUERY_GET_CATEGORIES_BY_FILTER;\r\n\t\t\tGQL_QUERY__string_text = \"GQL_QUERY_GET_CATEGORIES_BY_FILTER\";\r\n\t\t} else {\r\n\t\t\tvariables = {\r\n\t\t\t\ttermTaxonomId: (categories || []).map((item) => item.value),\r\n\t\t\t};\r\n\t\t\tGQL_QUERY__string = GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC;\r\n\t\t\tGQL_QUERY__string_text = \"GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC\";\r\n\t\t}\r\n\t}\r\n\r\n\t// TAGS;\r\n\tif (typeOfTerm === \"tag\") {\r\n\t\tif (filterDataBy === \"by_filter\") {\r\n\t\t\tvariables = {\r\n\t\t\t\torder,\r\n\t\t\t\torderby: orderBy,\r\n\t\t\t\tfirst: Number(numberPerPage),\r\n\t\t\t};\r\n\t\t\tGQL_QUERY__string = GQL_QUERY_GET_TAGS_BY_FILTER;\r\n\t\t\tGQL_QUERY__string_text = \"GQL_QUERY_GET_TAGS_BY_FILTER\";\r\n\t\t} else {\r\n\t\t\tvariables = { termTaxonomId: (tags || []).map((item) => item.value) };\r\n\t\t\tGQL_QUERY__string = GQL_QUERY_GET_TAGS_BY_SPECIFIC;\r\n\t\t\tGQL_QUERY__string_text = \"GQL_QUERY_GET_TAGS_BY_SPECIFIC\";\r\n\t\t}\r\n\t}\r\n\r\n\t// =================== QUERY GRAPHQL ===================\r\n\tconst gqlQuery = gql`\r\n\t\t${GQL_QUERY__string}\r\n\t`;\r\n\tconst { loading, error, data } = useQuery<ListTermsGQLResultData>(gqlQuery, {\r\n\t\tvariables,\r\n\t});\r\n\r\n\tconst dataLists = data?.tags?.edges || data?.categories?.edges || [];\r\n\r\n\treturn {\r\n\t\tGQL_QUERY__string, // for debug\r\n\t\tGQL_QUERY__string_text,\r\n\t\tvariables,\r\n\t\tloading,\r\n\t\terror,\r\n\t\tdata,\r\n\t\tdataLists,\r\n\t};\r\n}\r\n"],"names":["React","useEffect","__","InputSearchCategories","InputSearchTags","TextControl","Panel","PanelBody","PanelRow","RadioControl","SelectControl","Spinner","RangeControl","InspectorControls","useBlockProps","SelectOrder","WidgetCategories","OPTIONS_FILTER_DATA_BY","useTermGqlQuery","Edit","props","attributes","setAttributes","clientId","filterDataBy","numberPerPage","order","orderBy","typeOfTerm","categories","tags","termCardName","heading","GQL_QUERY__string_text","data","dataLists","error","loading","variables","graphQLvariables","queryString","expectedNumberResults","length","handleChangeFilterDataBy","value","handleChangeRadioTypeOfTerm","renderFilterPostsContent","label","renderGeneralSetting","renderSidebarSettings","renderPreviewContent","JSON","stringify","useState","_","gql","useLazyQuery","Select","GQL_QUERY_SEARCH_CATEGORIES","onChange","defaultValue","selected","setSelected","searchContent","setSearchContent","loadGreeting","hanleChangeSelect","GQL_QUERY__string","gqlQuery","called","search","categoriesList","edges","map","item","id","node","databaseId","slug","name","handleInputChange","debounce","e","GQL_QUERY_SEARCH_TAGS","tagsList","setOrder","avatarColors","EDGES_POST_COMMONT_FIELDS","EDGES_TERMS_COMMONT_FIELDS","EDGES_USER_COMMONT_FIELDS","PLLs","GQL_QUERY_GET_POSTS_BY_FILTER","GQL_QUERY_GET_POSTS_BY_SPECIFIC","GQL_QUERY_GET_USERS_BY_FILTER","GQL_QUERY_GET_USERS_BY_SPECIFIC","GQL_QUERY_GET_CATEGORIES_BY_FILTER","GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC","GQL_QUERY_GET_TAGS_BY_FILTER","GQL_QUERY_GET_TAGS_BY_SPECIFIC","GQL_QUERY_SEARCH_POSTS","GQL_QUERY_SEARCH_USER","IS_ENABLE_PLL","window","ncmazcoreJsData","pll_current_language","pll_themeoption_actived","PLL_GET__GQL_QUERY_GET_POSTS_BY_FILTER","PLL_GET__GQL_QUERY_GET_POSTS_BY_SPECIFIC","PLL_GET__GQL_QUERY_GET_CATEGORIES_BY_FILTER","PLL_GET__GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC","PLL_GET__GQL_QUERY_GET_TAGS_BY_FILTER","PLL_GET__GQL_QUERY_GET_TAGS_BY_SPECIFIC","PLL_GET__GQL_QUERY_SEARCH_POSTS","PLL_GET__GQL_QUERY_SEARCH_CATEGORIES","PLL_GET__GQL_QUERY_SEARCH_TAGS","CardCategory1","className","size","taxonomyNode","count","link","ncTaxonomyMeta","categoryId","color","featuredImage","sourceUrl","Tag","tagNode","hideCount","WidgetHeading1","renderCard","term","index","title","viewAllLabel","viewAllHref","useQuery","orderby","first","Number","termTaxonomId"],"sourceRoot":""}