{"version":3,"file":"src_block-widget-terms_Edit_tsx.js","mappings":"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","sources":["webpack://ncmaz-core/./src/block-widget-terms/Edit.tsx","webpack://ncmaz-core/./src/components/InputSearchCategories.tsx","webpack://ncmaz-core/./src/components/InputSearchTags.tsx","webpack://ncmaz-core/./src/components/SelectOrder.tsx","webpack://ncmaz-core/./src/contains/contants.ts","webpack://ncmaz-core/./src/contains/contantsCommon.ts","webpack://ncmaz-core/./src/contains/contantsPLL.ts","webpack://ncmaz-core/./src/frontend-components/CardCategory1/CardCategory1.tsx","webpack://ncmaz-core/./src/frontend-components/Tag/Tag.tsx","webpack://ncmaz-core/./src/frontend-components/WidgetCategories/WidgetCategories.tsx","webpack://ncmaz-core/./src/frontend-components/WidgetHeading1/WidgetHeading1.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { __ } from \"@wordpress/i18n\";\r\nimport InputSearchCategories from \"../components/InputSearchCategories\";\r\nimport InputSearchTags from \"../components/InputSearchTags\";\r\nimport {\r\n\tTextControl,\r\n\tPanel,\r\n\tPanelBody,\r\n\tPanelRow,\r\n\tRadioControl,\r\n\tSelectControl,\r\n\tSpinner,\r\n\tRangeControl,\r\n} from \"@wordpress/components\";\r\nimport { InspectorControls, useBlockProps } from \"@wordpress/block-editor\";\r\nimport SelectOrder from \"../components/SelectOrder\";\r\nimport { useQuery, gql } from \"@apollo/client\";\r\nimport WidgetCategories from \"../frontend-components/WidgetCategories/WidgetCategories\";\r\nimport {\r\n\tGQL_QUERY_GET_CATEGORIES_BY_FILTER,\r\n\tGQL_QUERY_GET_CATEGORIES_BY_SPECIFIC,\r\n\tGQL_QUERY_GET_TAGS_BY_FILTER,\r\n\tGQL_QUERY_GET_TAGS_BY_SPECIFIC,\r\n} from \"../contains/contants\";\r\n\r\nexport default function Edit(props) {\r\n\tconst { attributes, setAttributes, clientId } = props;\r\n\t//\r\n\tconst {\r\n\t\tfilterDataBy,\r\n\t\tnumberPerPage,\r\n\t\torder,\r\n\t\torderBy,\r\n\t\ttypeOfTerm,\r\n\t\tcategories,\r\n\t\ttags,\r\n\t\t//\r\n\t\ttermCardName,\r\n\t\theading,\r\n\t\t//\r\n\t\tgraphQLvariables,\r\n\t\tgraphQLData,\r\n\t} = attributes;\r\n\r\n\t//\r\n\tlet GQL_QUERY__string = \"\";\r\n\tlet GQL_QUERY__string_xxx = \"\";\r\n\tlet variables = {};\r\n\t//\r\n\r\n\t// CATEGORIES\r\n\tif (typeOfTerm === \"category\") {\r\n\t\tif (filterDataBy === \"by_filter\") {\r\n\t\t\tvariables = {\r\n\t\t\t\torder,\r\n\t\t\t\torderby: orderBy,\r\n\t\t\t\tfirst: Number(numberPerPage),\r\n\t\t\t};\r\n\t\t\tGQL_QUERY__string = GQL_QUERY_GET_CATEGORIES_BY_FILTER;\r\n\t\t\tGQL_QUERY__string_xxx = \"GQL_QUERY_GET_CATEGORIES_BY_FILTER\";\r\n\t\t} else {\r\n\t\t\tvariables = {\r\n\t\t\t\ttermTaxonomId: (categories || []).map((item) => item.value),\r\n\t\t\t};\r\n\t\t\tGQL_QUERY__string = GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC;\r\n\t\t\tGQL_QUERY__string_xxx = \"GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC\";\r\n\t\t}\r\n\t}\r\n\r\n\t// TAGS;\r\n\tif (typeOfTerm === \"tag\") {\r\n\t\tif (filterDataBy === \"by_filter\") {\r\n\t\t\tvariables = {\r\n\t\t\t\torder,\r\n\t\t\t\torderby: orderBy,\r\n\t\t\t\tfirst: Number(numberPerPage),\r\n\t\t\t};\r\n\t\t\tGQL_QUERY__string = GQL_QUERY_GET_TAGS_BY_FILTER;\r\n\t\t\tGQL_QUERY__string_xxx = \"GQL_QUERY_GET_TAGS_BY_FILTER\";\r\n\t\t} else {\r\n\t\t\tvariables = { termTaxonomId: (tags || []).map((item) => item.value) };\r\n\t\t\tGQL_QUERY__string = GQL_QUERY_GET_TAGS_BY_SPECIFIC;\r\n\t\t\tGQL_QUERY__string_xxx = \"GQL_QUERY_GET_TAGS_BY_SPECIFIC\";\r\n\t\t}\r\n\t}\r\n\r\n\t// =================== QUERY GRAPHQL ===================\r\n\tconst gqlQuery = gql`\r\n\t\t${GQL_QUERY__string}\r\n\t`;\r\n\tconst { loading, error, data } = useQuery(gqlQuery, { variables });\r\n\r\n\tconst dataLists = data?.tags?.edges || data?.categories?.edges || [];\r\n\r\n\t// ---- SAVE graphQLvariables ----\r\n\tuseEffect(() => {\r\n\t\tif (!data) return;\r\n\t\tsetAttributes({\r\n\t\t\tgraphQLvariables:\r\n\t\t\t\tfilterDataBy !== \"by_specific\"\r\n\t\t\t\t\t? {\r\n\t\t\t\t\t\t\tvariables,\r\n\t\t\t\t\t\t\tqueryString: GQL_QUERY__string_xxx,\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t: {},\r\n\t\t\tgraphQLData: filterDataBy === \"by_specific\" ? data : {},\r\n\t\t});\r\n\t}, [data]);\r\n\r\n\tconst renderFilterPostsContent = () => {\r\n\t\tif (filterDataBy === \"by_specific\") {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"w-full space-y-2.5\">\r\n\t\t\t\t\t{typeOfTerm === \"category\" && (\r\n\t\t\t\t\t\t<InputSearchCategories\r\n\t\t\t\t\t\t\tdefaultValue={categories}\r\n\t\t\t\t\t\t\tonChange={(categories) => setAttributes({ categories })}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{/* ------- */}\r\n\t\t\t\t\t{typeOfTerm === \"tag\" && (\r\n\t\t\t\t\t\t<InputSearchTags\r\n\t\t\t\t\t\t\tdefaultValue={tags}\r\n\t\t\t\t\t\t\tonChange={(tags) => setAttributes({ tags })}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"w-full space-y-2.5\">\r\n\t\t\t\t<SelectControl\r\n\t\t\t\t\tlabel={__(\"OrderBy\", \"ncmaz-core\")}\r\n\t\t\t\t\tvalue={orderBy}\r\n\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t{ label: \"COUNT\", value: \"COUNT\" },\r\n\t\t\t\t\t\t{ label: \"NAME\", value: \"NAME\" },\r\n\t\t\t\t\t\t{ label: \"TERM_GROUP\", value: \"TERM_GROUP\" },\r\n\t\t\t\t\t\t{ label: \"TERM_ID\", value: \"TERM_ID\" },\r\n\t\t\t\t\t\t{ label: \"TERM_ORDER\", value: \"TERM_ORDER\" },\r\n\t\t\t\t\t]}\r\n\t\t\t\t\tonChange={(orderBy) => setAttributes({ orderBy })}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t{/* ------- */}\r\n\t\t\t\t<SelectOrder\r\n\t\t\t\t\tdefaultValue={order}\r\n\t\t\t\t\tonChange={(order) => setAttributes({ order })}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t{/* ------- */}\r\n\t\t\t\t<div className=\"w-full space-y-1\">\r\n\t\t\t\t\t<legend>{__(\"Number per page\", \"ncmaz-core\")}</legend>\r\n\t\t\t\t\t<RangeControl\r\n\t\t\t\t\t\tonChange={(numberPerPage) =>\r\n\t\t\t\t\t\t\tsetAttributes({ numberPerPage: numberPerPage })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmin={4}\r\n\t\t\t\t\t\tmax={30}\r\n\t\t\t\t\t\tvalue={numberPerPage}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tconst renderGeneralSetting = () => {\r\n\t\treturn (\r\n\t\t\t<div className=\"space-y-2.5\">\r\n\t\t\t\t<SelectControl\r\n\t\t\t\t\tlabel={__(\"Choose type of card\", \"ncmaz-core\")}\r\n\t\t\t\t\tvalue={termCardName}\r\n\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t{ label: \"Term card 1\", value: \"card1\" },\r\n\t\t\t\t\t\t{ label: \"Term card 2\", value: \"tag-card\" },\r\n\t\t\t\t\t]}\r\n\t\t\t\t\tonChange={(termCardName) => {\r\n\t\t\t\t\t\tsetAttributes({ termCardName });\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<TextControl\r\n\t\t\t\t\tlabel={__(\"Heading\", \"ncmaz-core\")}\r\n\t\t\t\t\tvalue={heading}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tonChange={(heading) => setAttributes({ heading })}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tconst renderSidebarSettings = () => {\r\n\t\treturn (\r\n\t\t\t<InspectorControls key=\"setting\">\r\n\t\t\t\t<div data-type=\"ncmaz-core/sidebar-settings\">\r\n\t\t\t\t\t<Panel header=\"Section settings\">\r\n\t\t\t\t\t\t<PanelBody title=\"General Settings\">\r\n\t\t\t\t\t\t\t<PanelRow>{renderGeneralSetting()}</PanelRow>\r\n\t\t\t\t\t\t</PanelBody>\r\n\t\t\t\t\t\t<PanelBody initialOpen={false} title=\"Filter data settings\">\r\n\t\t\t\t\t\t\t<PanelRow>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<RadioControl\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Type of term\"\r\n\t\t\t\t\t\t\t\t\t\tselected={typeOfTerm}\r\n\t\t\t\t\t\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t\t\t\t\t\t{ label: \"Category\", value: \"category\" },\r\n\t\t\t\t\t\t\t\t\t\t\t{ label: \"Tag\", value: \"tag\" },\r\n\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(typeOfTerm) => setAttributes({ typeOfTerm })}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<div className=\"border-b border-gray-600 my-2\"></div>\r\n\t\t\t\t\t\t\t\t\t<RadioControl\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Terms query by\"\r\n\t\t\t\t\t\t\t\t\t\tselected={filterDataBy}\r\n\t\t\t\t\t\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t\t\t\t\t\t{ label: \"Select Terms specific\", value: \"by_specific\" },\r\n\t\t\t\t\t\t\t\t\t\t\t{ label: \"Select Terms by filter\", value: \"by_filter\" },\r\n\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(filterDataBy) => setAttributes({ filterDataBy })}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</PanelRow>\r\n\t\t\t\t\t\t\t<div className=\"border-b border-gray-600 mt-3 mb-4\"></div>\r\n\t\t\t\t\t\t\t<PanelRow>{renderFilterPostsContent()}</PanelRow>\r\n\t\t\t\t\t\t</PanelBody>\r\n\t\t\t\t\t</Panel>\r\n\t\t\t\t</div>\r\n\t\t\t</InspectorControls>\r\n\t\t);\r\n\t};\r\n\r\n\tconst renderPreviewContent = () => {\r\n\t\treturn (\r\n\t\t\t<WidgetCategories\r\n\t\t\t\ttermCardName={termCardName}\r\n\t\t\t\tcategories={dataLists}\r\n\t\t\t\theading={heading}\r\n\t\t\t/>\r\n\t\t);\r\n\t};\r\n\r\n\t//\r\n\treturn (\r\n\t\t<div {...useBlockProps()}>\r\n\t\t\t{renderSidebarSettings()}\r\n\r\n\t\t\t{renderPreviewContent()}\r\n\r\n\t\t\t{loading && <Spinner />}\r\n\t\t\t{error && (\r\n\t\t\t\t<pre className=\"text-xs text-red-500\">\r\n\t\t\t\t\t<code>{JSON.stringify(error)}</code>\r\n\t\t\t\t</pre>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { __ } from \"@wordpress/i18n\";\r\nimport _ from \"lodash\";\r\nimport { gql, useLazyQuery } from \"@apollo/client\";\r\nimport Select from \"react-select\";\r\nimport { GQL_QUERY_SEARCH_CATEGORIES } from \"../contains/contants\";\r\n\r\nconst InputSearchCategories = ({ onChange, defaultValue = [] }) => {\r\n\tconst [selected, setSelected] = useState(defaultValue);\r\n\tconst [searchContent, setSearchContent] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tonChange && onChange(selected);\r\n\t}, [selected]);\r\n\r\n\t//\r\n\tuseEffect(() => {\r\n\t\tsearchContent && loadGreeting();\r\n\t}, [searchContent]);\r\n\tconst hanleChangeSelect = (selected) => setSelected(selected);\r\n\r\n\t//\r\n\tlet GQL_QUERY__string = GQL_QUERY_SEARCH_CATEGORIES;\r\n\tconst gqlQuery = gql`\r\n\t\t${GQL_QUERY__string}\r\n\t`;\r\n\tconst [\r\n\t\tloadGreeting,\r\n\t\t{ loading, error, data, called },\r\n\t] = useLazyQuery(gqlQuery, { variables: { search: searchContent } });\r\n\r\n\tlet categoriesList = data?.categories?.edges || [];\r\n\tif (categoriesList && categoriesList.length) {\r\n\t\tcategoriesList = categoriesList.map((item) => ({\r\n\t\t\tid: item.node.databaseId,\r\n\t\t\tslug: item.node.slug,\r\n\t\t\tvalue: item.node.databaseId,\r\n\t\t\tlabel: item.node.name,\r\n\t\t\tname: item.node.name,\r\n\t\t}));\r\n\t}\r\n\t//\r\n\tconst handleInputChange = _.debounce(function (e) {\r\n\t\tsetSearchContent(e);\r\n\t}, 200);\r\n\r\n\treturn (\r\n\t\t<div className=\"w-full space-y-1\">\r\n\t\t\t<legend>{__(\"Type and select categories\", \"ncmaz-core\")}</legend>\r\n\t\t\t<Select\r\n\t\t\t\tplaceholder=\"Select categories...\"\r\n\t\t\t\tisMulti\r\n\t\t\t\tonInputChange={handleInputChange}\r\n\t\t\t\tisLoading={loading}\r\n\t\t\t\tvalue={selected}\r\n\t\t\t\tonChange={hanleChangeSelect}\r\n\t\t\t\toptions={categoriesList}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default InputSearchCategories;\r\n","import { useEffect, useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { __ } from \"@wordpress/i18n\";\r\nimport { gql, useLazyQuery } from \"@apollo/client\";\r\nimport Select from \"react-select\";\r\nimport { GQL_QUERY_SEARCH_TAGS } from \"../contains/contants\";\r\n\r\nconst InputSearchTags = ({ onChange, defaultValue = [] }) => {\r\n\tconst [selected, setSelected] = useState(defaultValue);\r\n\tconst [searchContent, setSearchContent] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tonChange && onChange(selected);\r\n\t}, [selected]);\r\n\r\n\t//\r\n\tuseEffect(() => {\r\n\t\tsearchContent && loadGreeting();\r\n\t}, [searchContent]);\r\n\tconst hanleChangeSelect = (selected) => setSelected(selected);\r\n\r\n\t//\r\n\tlet GQL_QUERY__string = GQL_QUERY_SEARCH_TAGS;\r\n\tconst gqlQuery = gql`\r\n\t\t${GQL_QUERY__string}\r\n\t`;\r\n\tconst [\r\n\t\tloadGreeting,\r\n\t\t{ loading, error, data, called },\r\n\t] = useLazyQuery(gqlQuery, { variables: { search: searchContent } });\r\n\r\n\tlet tagsList = data?.tags?.edges || [];\r\n\tif (tagsList && tagsList.length) {\r\n\t\ttagsList = tagsList.map((item) => ({\r\n\t\t\tvalue: item.node.databaseId,\r\n\t\t\tlabel: item.node.name,\r\n\t\t}));\r\n\t}\r\n\t//\r\n\tconst handleInputChange = _.debounce(function (e) {\r\n\t\tsetSearchContent(e);\r\n\t}, 200);\r\n\r\n\treturn (\r\n\t\t<div className=\"w-full space-y-1\">\r\n\t\t\t<legend>{__(\"Type and select tags\", \"ncmaz-core\")}</legend>\r\n\t\t\t<Select\r\n\t\t\t\tplaceholder=\"Select tags...\"\r\n\t\t\t\tisMulti\r\n\t\t\t\tonInputChange={handleInputChange}\r\n\t\t\t\tisLoading={loading}\r\n\t\t\t\tvalue={selected}\r\n\t\t\t\tonChange={hanleChangeSelect}\r\n\t\t\t\toptions={tagsList}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default InputSearchTags;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"@wordpress/element\";\r\nimport { SelectControl } from \"@wordpress/components\";\r\n\r\nconst SelectOrder = ({ onChange, defaultValue = \"DESC\" }) => {\r\n\tconst [order, setOrder] = useState(defaultValue);\r\n\r\n\tuseEffect(() => {\r\n\t\tonChange && onChange(order);\r\n\t}, [order]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<SelectControl\r\n\t\t\t\tlabel=\"Order\"\r\n\t\t\t\tvalue={order}\r\n\t\t\t\toptions={[\r\n\t\t\t\t\t{ label: \"DESC\", value: \"DESC\" },\r\n\t\t\t\t\t{ label: \"ASC\", value: \"ASC\" },\r\n\t\t\t\t]}\r\n\t\t\t\tonChange={setOrder}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SelectOrder;\r\n","declare global {\r\n\tvar ncmazcoreJsData: {\r\n\t\tajaxurl: string;\r\n\t\trestUrl: string;\r\n\t\tgraphQLBasePath: string;\r\n\t\timg_empty_png: string;\r\n\t\timg_musicWave_png: string;\r\n\t\thomeURL: string;\r\n\t\tpll_current_language: string | null;\r\n\t\tpll_themeoption_actived: string | null;\r\n\t};\r\n}\r\n\r\nimport {\r\n\tavatarColors,\r\n\tEDGES_POST_COMMONT_FIELDS,\r\n\tEDGES_TERMS_COMMONT_FIELDS,\r\n\tEDGES_USER_COMMONT_FIELDS,\r\n} from \"./contantsCommon\";\r\nimport { PLLs } from \"./contantsPLL\";\r\n\r\nlet GQL_QUERY_GET_POSTS_BY_FILTER = `\r\n  query GQL_QUERY_GET_POSTS_BY_FILTER(\r\n    $field: PostObjectsConnectionOrderbyEnum = AUTHOR\r\n    $order: OrderEnum = ASC\r\n    $categoryIn: [ID] = []\r\n    $tagIn: [ID] = []\r\n    $authorIn: [ID] = []\r\n    $last: Int = null\r\n    $first: Int = 10\r\n    $before: String = \"\"\r\n    $after: String = \"\"\r\n  ) {\r\n    posts(\r\n      where: {\r\n        orderby: { field: $field, order: $order }\r\n        categoryIn: $categoryIn\r\n        tagIn: $tagIn\r\n        authorIn: $authorIn\r\n      }\r\n      last: $last\r\n      first: $first\r\n      before: $before\r\n      after: $after\r\n    ) {\r\n     ${EDGES_POST_COMMONT_FIELDS}\r\n      pageInfo {\r\n        hasNextPage\r\n        hasPreviousPage\r\n        endCursor\r\n        startCursor\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet GQL_QUERY_GET_POSTS_BY_SPECIFIC = `\r\n  query GQL_QUERY_GET_POSTS_BY_SPECIFIC($nameIn: [String] = \"\") {\r\n    posts(where: { nameIn: $nameIn,  orderby: {order: ASC, field: NAME_IN} }) { ${EDGES_POST_COMMONT_FIELDS} }\r\n  }\r\n`;\r\n\r\n// ===================== USERS =================================================\r\n\r\nlet GQL_QUERY_GET_USERS_BY_FILTER = `query GQL_QUERY_GET_USERS_BY_FILTER(\r\n\t$after: String = \"\"\r\n\t$before: String = \"\"\r\n\t$first: Int = 10\r\n\t$last: Int = null\r\n\t$field: UsersConnectionOrderbyEnum = DISPLAY_NAME\r\n\t$order: OrderEnum = ASC\r\n\t$roleIn: [UserRoleEnum] = []\r\n) {\r\n\tusers(\r\n\t\twhere: { orderby: { field: $field, order: $order }, roleIn: $roleIn }\r\n\t\tlast: $last\r\n\t\tfirst: $first\r\n\t\tbefore: $before\r\n\t\tafter: $after\r\n\t) { ${EDGES_USER_COMMONT_FIELDS} }\r\n}`;\r\n\r\nlet GQL_QUERY_GET_USERS_BY_SPECIFIC = `query GQL_QUERY_GET_USERS_BY_SPECIFIC($include: [Int] = null) {\r\n\tusers(where: { include: $include }) { ${EDGES_USER_COMMONT_FIELDS} }\r\n}`;\r\n\r\n// ===================== TERMS - TAGS | CATEGORIES =========================================\r\n\r\nlet GQL_QUERY_GET_CATEGORIES_BY_FILTER = `\r\n\tquery GQL_QUERY_GET_CATEGORIES_BY_FILTER(\r\n\t\t$order: OrderEnum = ASC\r\n\t\t$orderby: TermObjectsConnectionOrderbyEnum = COUNT\r\n\t\t$after: String = null\r\n\t\t$before: String = null\r\n\t\t$first: Int = 10\r\n\t\t$last: Int = null\r\n\t) {\r\n\t\tcategories(\r\n\t\t\twhere: { order: $order, orderby: $orderby, hideEmpty: true  }\r\n\t\t\tfirst: $first\r\n\t\t\tbefore: $before\r\n\t\t\tafter: $after\r\n\t\t\tlast: $last\r\n\t\t) { ${EDGES_TERMS_COMMONT_FIELDS} }\r\n\t}\r\n`;\r\n\r\nlet GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC = `\r\n\tquery GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC($termTaxonomId: [ID] = \"\") {\r\n\t\tcategories(where: { termTaxonomId: $termTaxonomId }) { ${EDGES_TERMS_COMMONT_FIELDS} }\r\n\t}\r\n`;\r\n\r\n// TAGS\r\nlet GQL_QUERY_GET_TAGS_BY_FILTER = `\r\n\tquery GQL_QUERY_GET_TAGS_BY_FILTER(\r\n\t\t$order: OrderEnum = ASC\r\n\t\t$orderby: TermObjectsConnectionOrderbyEnum = COUNT\r\n\t\t$after: String = null\r\n\t\t$before: String = null\r\n\t\t$first: Int = 10\r\n\t\t$last: Int = null\r\n\t) {\r\n\t\ttags(\r\n\t\t\twhere: { order: $order, orderby: $orderby, hideEmpty: true }\r\n\t\t\tfirst: $first\r\n\t\t\tbefore: $before\r\n\t\t\tafter: $after\r\n\t\t\tlast: $last\r\n\t\t) { ${EDGES_TERMS_COMMONT_FIELDS} }\r\n\t}\r\n`;\r\n\r\nlet GQL_QUERY_GET_TAGS_BY_SPECIFIC = `\r\n\tquery GQL_QUERY_GET_TAGS_BY_SPECIFIC($termTaxonomId: [ID] = \"\") {\r\n\t\ttags(where: { termTaxonomId: $termTaxonomId }) { ${EDGES_TERMS_COMMONT_FIELDS} }\r\n\t}\r\n`;\r\n\r\n// SEARCH\r\nlet GQL_QUERY_SEARCH_POSTS = `\r\n  query GQL_QUERY_SEARCH_POSTS($search: String = \"\") {\r\n    posts(where: {search: $search})\r\n\t{ ${EDGES_POST_COMMONT_FIELDS} }\r\n  }\r\n`;\r\n\r\nlet GQL_QUERY_SEARCH_USER = `\r\n  query GQL_QUERY_SEARCH_USER($search: String = \"\") {\r\n\tusers(where: {search: $search})\r\n\t{ ${EDGES_USER_COMMONT_FIELDS} }\r\n  }\r\n`;\r\n\r\nlet GQL_QUERY_SEARCH_CATEGORIES = `\r\n  query GQL_QUERY_SEARCH_CATEGORIES($search: String = \"\") {\r\n\tcategories(where: {search: $search})\r\n\t{ ${EDGES_TERMS_COMMONT_FIELDS} }\r\n  }\r\n`;\r\n\r\nlet GQL_QUERY_SEARCH_TAGS = `\r\n  query GQL_QUERY_SEARCH_TAGS($search: String = \"\") {\r\n\ttags(where: {search: $search})\r\n\t{ ${EDGES_TERMS_COMMONT_FIELDS} }\r\n  }\r\n`;\r\n\r\n// CHECK ENABLE POLYLANG\r\nlet IS_ENABLE_PLL =\r\n\t!!window.ncmazcoreJsData.pll_current_language &&\r\n\t!!window.ncmazcoreJsData.pll_themeoption_actived;\r\n//\r\nif (IS_ENABLE_PLL) {\r\n\tGQL_QUERY_GET_POSTS_BY_FILTER = PLLs.PLL_GET__GQL_QUERY_GET_POSTS_BY_FILTER;\r\n\tGQL_QUERY_GET_POSTS_BY_SPECIFIC =\r\n\t\tPLLs.PLL_GET__GQL_QUERY_GET_POSTS_BY_SPECIFIC;\r\n\tGQL_QUERY_GET_CATEGORIES_BY_FILTER =\r\n\t\tPLLs.PLL_GET__GQL_QUERY_GET_CATEGORIES_BY_FILTER;\r\n\tGQL_QUERY_GET_CATEGORIES_BY_SPECIFIC =\r\n\t\tPLLs.PLL_GET__GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC;\r\n\tGQL_QUERY_GET_TAGS_BY_FILTER = PLLs.PLL_GET__GQL_QUERY_GET_TAGS_BY_FILTER;\r\n\tGQL_QUERY_GET_TAGS_BY_SPECIFIC = PLLs.PLL_GET__GQL_QUERY_GET_TAGS_BY_SPECIFIC;\r\n\t//\r\n\tGQL_QUERY_SEARCH_POSTS = PLLs.PLL_GET__GQL_QUERY_SEARCH_POSTS;\r\n\tGQL_QUERY_SEARCH_CATEGORIES = PLLs.PLL_GET__GQL_QUERY_SEARCH_CATEGORIES;\r\n\tGQL_QUERY_SEARCH_TAGS = PLLs.PLL_GET__GQL_QUERY_SEARCH_TAGS;\r\n}\r\n\r\nexport {\r\n\tavatarColors,\r\n\t//\r\n\tGQL_QUERY_SEARCH_POSTS,\r\n\tGQL_QUERY_SEARCH_USER,\r\n\t//\r\n\tEDGES_POST_COMMONT_FIELDS,\r\n\tGQL_QUERY_GET_POSTS_BY_FILTER,\r\n\tGQL_QUERY_GET_POSTS_BY_SPECIFIC,\r\n\t//\r\n\tEDGES_USER_COMMONT_FIELDS,\r\n\tGQL_QUERY_GET_USERS_BY_FILTER,\r\n\tGQL_QUERY_GET_USERS_BY_SPECIFIC,\r\n\t//\r\n\tEDGES_TERMS_COMMONT_FIELDS,\r\n\tGQL_QUERY_GET_CATEGORIES_BY_FILTER,\r\n\tGQL_QUERY_GET_CATEGORIES_BY_SPECIFIC,\r\n\tGQL_QUERY_GET_TAGS_BY_FILTER,\r\n\tGQL_QUERY_GET_TAGS_BY_SPECIFIC,\r\n\t//\r\n\tGQL_QUERY_SEARCH_CATEGORIES,\r\n\tGQL_QUERY_SEARCH_TAGS,\r\n};\r\n","let avatarColors = [\r\n\t\"#ffdd00\",\r\n\t\"#fbb034\",\r\n\t\"#ff4c4c\",\r\n\t\"#c1d82f\",\r\n\t\"#f48924\",\r\n\t\"#7ac143\",\r\n\t\"#30c39e\",\r\n\t\"#06BCAE\",\r\n\t\"#0695BC\",\r\n\t\"#037ef3\",\r\n\t\"#146eb4\",\r\n\t\"#8e43e7\",\r\n\t\"#ea1d5d\",\r\n\t\"#fc636b\",\r\n\t\"#ff6319\",\r\n\t\"#e01f3d\",\r\n\t\"#a0ac48\",\r\n\t\"#00d1b2\",\r\n\t\"#472f92\",\r\n\t\"#388ed1\",\r\n\t\"#a6192e\",\r\n\t\"#4a8594\",\r\n\t\"#7B9FAB\",\r\n\t\"#1393BD\",\r\n\t\"#5E13BD\",\r\n\t\"#E208A7\",\r\n];\r\n\r\n// ===================== POSTS =================================================\r\nlet EDGES_POST_COMMONT_FIELDS = ` edges {\r\n  node {\r\n    id\r\n    link\r\n    author {\r\n      node {\r\n        id\r\n        avatar {\r\n          url\r\n        }\r\n        url\r\n        uri\r\n        username\r\n        name\r\n        slug\r\n        ncUserMeta {\r\n          featuredImage {\r\n            sourceUrl\r\n          }\r\n        }\r\n      }\r\n    }\r\n    categories {\r\n      edges {\r\n        node {\r\n          id\r\n          link\r\n          name\r\n          uri\r\n          slug\r\n          count\r\n          categoryId\r\n          ncTaxonomyMeta {\r\n            color\r\n          }\r\n        }\r\n      }\r\n    }\r\n    commentCount\r\n    date\r\n    excerpt\r\n    featuredImage {\r\n      node {\r\n        id\r\n        altText\r\n        caption\r\n        sourceUrl\r\n      }\r\n    }\r\n    postFormats {\r\n      edges {\r\n        node {\r\n          id\r\n          name\r\n          slug\r\n        }\r\n      }\r\n    }\r\n    postId\r\n    slug\r\n    title\r\n    ncmazVideoUrl {\r\n      fieldGroupName\r\n      videoUrl\r\n    }\r\n    ncmazAudioUrl {\r\n      fieldGroupName\r\n      audioUrl\r\n    }\r\n    ncPostMetaData {\r\n      favoriteButtonShortcode\r\n      readingTimeShortcode\r\n      viewsCount\r\n      fieldGroupName\r\n    }\r\n    ncmazGalleryImgs {\r\n      fieldGroupName\r\n      image1 {\r\n        id\r\n        sourceUrl\r\n      }\r\n      image2 {\r\n        id\r\n        sourceUrl\r\n      }\r\n      image3 {\r\n        id\r\n        sourceUrl\r\n      }\r\n      image4 {\r\n        id\r\n        sourceUrl\r\n      }\r\n      image5 {\r\n        id\r\n        sourceUrl\r\n      }\r\n      image6 {\r\n        id\r\n        sourceUrl\r\n      }\r\n      image7 {\r\n        id\r\n        sourceUrl\r\n      }\r\n      image8 {\r\n        id\r\n        sourceUrl\r\n      }\r\n    }\r\n  }\r\n}`;\r\n\r\n// ===================== USERS =================================================\r\nlet EDGES_USER_COMMONT_FIELDS = `edges {\r\n\tnode {\r\n\t\tid\r\n\t\tname\r\n\t\tusername\r\n\t\tuserId\r\n\t\turl\r\n\t\turi\r\n    ncUserMeta {\r\n\t\t\tcolor\r\n\t\t\tncBio\r\n\t\t\tfeaturedImage {\r\n\t\t\t\tsourceUrl\r\n\t\t\t\tid\r\n\t\t\t}\r\n\t\t\tbackgroundImage {\r\n\t\t\t\tsourceUrl\r\n\t\t\t}\r\n\t\t}\r\n    posts {\r\n      pageInfo {\r\n        total\r\n      }\r\n    }\r\n\t}\r\n}`;\r\n\r\n// ===================== TERMS - TAGS | CATEGORIES =========================================\r\nlet EDGES_TERMS_COMMONT_FIELDS = `edges {\r\n    node {\r\n        id\r\n        slug\r\n        count\r\n        name\r\n        databaseId\r\n        description\r\n        link\r\n        ncTaxonomyMeta {\r\n            color                                     \r\n            featuredImage {\r\n                sourceUrl\r\n            }\r\n        }\r\n    }\r\n}`;\r\n\r\nexport {\r\n\tavatarColors,\r\n\t//\r\n\tEDGES_POST_COMMONT_FIELDS,\r\n\t//\r\n\tEDGES_USER_COMMONT_FIELDS,\r\n\t//\r\n\tEDGES_TERMS_COMMONT_FIELDS,\r\n};\r\n","import {\n\tEDGES_POST_COMMONT_FIELDS,\n\tEDGES_TERMS_COMMONT_FIELDS,\n} from \"./contantsCommon\";\n\nconst GQL_QUERY_GET_POSTS_BY_FILTER = `\n  query GQL_QUERY_GET_POSTS_BY_FILTER(\n    $language: LanguageCodeFilterEnum = ${window.ncmazcoreJsData.pll_current_language}\n    $field: PostObjectsConnectionOrderbyEnum = AUTHOR\n    $order: OrderEnum = ASC\n    $categoryIn: [ID] = []\n    $tagIn: [ID] = []\n    $authorIn: [ID] = []\n    $last: Int = null\n    $first: Int = 10\n    $before: String = \"\"\n    $after: String = \"\"\n  ) {\n    posts(\n      where: {\n        language: $language\n        orderby: { field: $field, order: $order }\n        categoryIn: $categoryIn\n        tagIn: $tagIn\n        authorIn: $authorIn\n      }\n      last: $last\n      first: $first\n      before: $before\n      after: $after\n    ) {\n     ${EDGES_POST_COMMONT_FIELDS}\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        endCursor\n        startCursor\n      }\n    }\n  }\n`;\n\nconst GQL_QUERY_GET_POSTS_BY_SPECIFIC = `\n  query GQL_QUERY_GET_POSTS_BY_SPECIFIC(\n    $language: LanguageCodeFilterEnum = ${window.ncmazcoreJsData.pll_current_language}\n    $nameIn: [String] = \"\"\n    ) {\n    posts(where: {\n      language: $language\n      nameIn: $nameIn\n      orderby: {order: ASC, field: NAME_IN}\n     }) { ${EDGES_POST_COMMONT_FIELDS} }\n  }\n`;\n\n// ===================== TERMS - TAGS | CATEGORIES =========================================\n\nconst GQL_QUERY_GET_CATEGORIES_BY_FILTER = `\n\tquery GQL_QUERY_GET_CATEGORIES_BY_FILTER(\n    $language: LanguageCodeFilterEnum = ${window.ncmazcoreJsData.pll_current_language}\n\t\t$order: OrderEnum = ASC\n\t\t$orderby: TermObjectsConnectionOrderbyEnum = COUNT\n\t\t$after: String = null\n\t\t$before: String = null\n\t\t$first: Int = 10\n\t\t$last: Int = null\n\t) {\n\t\tcategories(\n\t\t\twhere: { \n        language: $language,\n        order: $order,\n        orderby: $orderby \n      }\n\t\t\tfirst: $first\n\t\t\tbefore: $before\n\t\t\tafter: $after\n\t\t\tlast: $last\n\t\t) { ${EDGES_TERMS_COMMONT_FIELDS} }\n\t}\n`;\n\nconst GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC = `\n\tquery GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC(\n    $language: LanguageCodeFilterEnum = ${window.ncmazcoreJsData.pll_current_language}\n    $termTaxonomId: [ID] = \"\"\n    ) {\n\t\tcategories(where: {\n      language: $language\n      termTaxonomId: $termTaxonomId\n     }) { ${EDGES_TERMS_COMMONT_FIELDS} }\n\t}\n`;\n\n// TAGS\nconst GQL_QUERY_GET_TAGS_BY_FILTER = `\n\tquery GQL_QUERY_GET_TAGS_BY_FILTER(\n    $language: LanguageCodeFilterEnum = ${window.ncmazcoreJsData.pll_current_language}\n\t\t$order: OrderEnum = ASC\n\t\t$orderby: TermObjectsConnectionOrderbyEnum = COUNT\n\t\t$after: String = null\n\t\t$before: String = null\n\t\t$first: Int = 10\n\t\t$last: Int = null\n\t) {\n\t\ttags(\n\t\t\twhere: {\n        language: $language \n        order: $order\n        orderby: $orderby \n      }\n\t\t\tfirst: $first\n\t\t\tbefore: $before\n\t\t\tafter: $after\n\t\t\tlast: $last\n\t\t) { ${EDGES_TERMS_COMMONT_FIELDS} }\n\t}\n`;\n\nconst GQL_QUERY_GET_TAGS_BY_SPECIFIC = `\n\tquery GQL_QUERY_GET_TAGS_BY_SPECIFIC(\n    $language: LanguageCodeFilterEnum = ${window.ncmazcoreJsData.pll_current_language}\n    $termTaxonomId: [ID] = \"\"\n    ) {\n\t\ttags(where: {\n      language: $language\n      termTaxonomId: $termTaxonomId\n    }) { ${EDGES_TERMS_COMMONT_FIELDS} }\n\t}\n`;\n\n// SEARCH\n\nlet GQL_QUERY_SEARCH_POSTS = `\n  query GQL_QUERY_SEARCH_POSTS($search: String = \"\", $language: LanguageCodeFilterEnum = ${window.ncmazcoreJsData.pll_current_language}) {\n    posts(where: {search: $search,  language: $language})\n\t{ ${EDGES_POST_COMMONT_FIELDS} }\n  }\n`;\n\nlet GQL_QUERY_SEARCH_CATEGORIES = `\n  query GQL_QUERY_SEARCH_CATEGORIES($search: String = \"\", $language: LanguageCodeFilterEnum = ${window.ncmazcoreJsData.pll_current_language}) {\n\tcategories(where: {language: $language, search: $search})\n\t{ ${EDGES_TERMS_COMMONT_FIELDS} }\n  }\n`;\nlet GQL_QUERY_SEARCH_TAGS = `\n  query GQL_QUERY_SEARCH_TAGS($search: String = \"\", $language: LanguageCodeFilterEnum = ${window.ncmazcoreJsData.pll_current_language}) {\n\ttags(where: {language: $language, search: $search})\n\t{ ${EDGES_TERMS_COMMONT_FIELDS} }\n  }\n`;\n\nexport const PLLs = {\n\tPLL_GET__GQL_QUERY_GET_POSTS_BY_FILTER: GQL_QUERY_GET_POSTS_BY_FILTER,\n\tPLL_GET__GQL_QUERY_GET_POSTS_BY_SPECIFIC: GQL_QUERY_GET_POSTS_BY_SPECIFIC,\n\n\t//\n\tPLL_GET__GQL_QUERY_GET_CATEGORIES_BY_FILTER: GQL_QUERY_GET_CATEGORIES_BY_FILTER,\n\tPLL_GET__GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC: GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC,\n\tPLL_GET__GQL_QUERY_GET_TAGS_BY_FILTER: GQL_QUERY_GET_TAGS_BY_FILTER,\n\tPLL_GET__GQL_QUERY_GET_TAGS_BY_SPECIFIC: GQL_QUERY_GET_TAGS_BY_SPECIFIC,\n\t//\n\tPLL_GET__GQL_QUERY_SEARCH_CATEGORIES: GQL_QUERY_SEARCH_CATEGORIES,\n\tPLL_GET__GQL_QUERY_SEARCH_TAGS: GQL_QUERY_SEARCH_TAGS,\n\tPLL_GET__GQL_QUERY_SEARCH_POSTS: GQL_QUERY_SEARCH_POSTS,\n};\n","import React, { FC } from \"react\";\r\n\r\nconst CardCategory1 = ({ className = \"\", size = \"normal\", taxonomyNode }) => {\r\n\tconst { count, name, link, ncTaxonomyMeta, categoryId, id } = taxonomyNode;\r\n\tconst { color, featuredImage } = ncTaxonomyMeta;\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`nc-CardCategory1  flex items-center ${className}`}\r\n\t\t\tdata-nc-id=\"CardCategory1\"\r\n\t\t>\r\n\t\t\t<div\r\n\t\t\t\tclassName={`flex-shrink-0 ${\r\n\t\t\t\t\tsize === \"large\" ? \"w-20 h-20\" : \"w-12 h-12\"\r\n\t\t\t\t} rounded-lg mr-4 overflow-hidden object-cover bg-gray-400`}\r\n\t\t\t>\r\n\t\t\t\t{featuredImage?.sourceUrl && (\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"w-full h-full object-cover bg-red-400\"\r\n\t\t\t\t\t\tsrc={featuredImage?.sourceUrl}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<h2\r\n\t\t\t\t\tclassName={`${\r\n\t\t\t\t\t\tsize === \"large\" ? \"text-lg\" : \"text-base\"\r\n\t\t\t\t\t} nc-card-title text-neutral-900 dark:text-neutral-100 font-semibold`}\r\n\t\t\t\t>\r\n\t\t\t\t\t{name}\r\n\t\t\t\t</h2>\r\n\t\t\t\t<span\r\n\t\t\t\t\tclassName={`${\r\n\t\t\t\t\t\tsize === \"large\" ? \"text-sm\" : \"text-xs\"\r\n\t\t\t\t\t} block mt-[2px] text-neutral-500 dark:text-neutral-400`}\r\n\t\t\t\t>\r\n\t\t\t\t\t{count || 0} Articles\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CardCategory1;\r\n","import React, { FC } from \"react\";\r\n\r\nconst Tag = ({ className = \"\", tagNode, hideCount = false }) => {\r\n\tconst { count, name, link } = tagNode;\r\n\r\n\treturn (\r\n\t\t<a\r\n\t\t\tclassName={`nc-Tag inline-block bg-white text-sm text-neutral-600 py-2 px-3 rounded-lg border border-neutral-100 md:py-2.5 md:px-4 dark:bg-neutral-700 dark:border-neutral-700 hover:border-neutral-200 dark:hover:border-neutral-6000 ${className}`}\r\n\t\t\tdata-nc-id=\"Tag\"\r\n\t\t\thref={link}\r\n\t\t>\r\n\t\t\t{`${name}`}\r\n\t\t\t{!hideCount && <span className=\"text-xs font-normal\"> ({count})</span>}\r\n\t\t</a>\r\n\t);\r\n};\r\n\r\nexport default Tag;\r\n","import React, { FC } from \"react\";\r\nimport CardCategory1 from \"../CardCategory1/CardCategory1\";\r\nimport Tag from \"../Tag/Tag\";\r\nimport WidgetHeading1 from \"../WidgetHeading1/WidgetHeading1\";\r\n\r\nconst WidgetCategories = ({\r\n\tclassName = \"bg-neutral-100 dark:bg-neutral-800\",\r\n\theading = \"\",\r\n\ttermCardName = \"card1\",\r\n\tcategories,\r\n}) => {\r\n\tconst renderCard = (term, index) => {\r\n\t\tswitch (termCardName) {\r\n\t\t\tcase \"card1\":\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<CardCategory1\r\n\t\t\t\t\t\tclassName=\"p-4 xl:p-5 hover:bg-neutral-200 dark:hover:bg-neutral-700\"\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\ttaxonomyNode={term.node}\r\n\t\t\t\t\t\tsize=\"normal\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\tcase \"tag-card\":\r\n\t\t\t\treturn <Tag className=\"mr-2 mb-2\" key={index} tagNode={term.node} />;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`nc-WidgetCategories rounded-3xl  overflow-hidden ${className}`}\r\n\t\t\tdata-nc-id=\"WidgetCategories\"\r\n\t\t>\r\n\t\t\t<WidgetHeading1 title={heading} />\r\n\t\t\t<div className=\"flow-root\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={`flex  ${\r\n\t\t\t\t\t\ttermCardName === \"card1\"\r\n\t\t\t\t\t\t\t? \"flex-col divide-y divide-neutral-200 dark:divide-neutral-700\"\r\n\t\t\t\t\t\t\t: \"flex-wrap p-4 xl:p-5\"\r\n\t\t\t\t\t}`}\r\n\t\t\t\t>\r\n\t\t\t\t\t{categories.map(renderCard)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default WidgetCategories;\r\n","import React, { FC } from \"react\";\r\n\r\nconst WidgetHeading1 = ({\r\n\tclassName = \"\",\r\n\ttitle,\r\n\tviewAllLabel,\r\n\tviewAllHref,\r\n}) => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`nc-WidgetHeading1 flex items-center justify-between p-4 xl:p-5 border-b border-neutral-200 dark:border-neutral-700 ${className}`}\r\n\t\t\tdata-nc-id=\"WidgetHeading1\"\r\n\t\t>\r\n\t\t\t<h2 className=\"text-lg text-neutral-900 dark:text-neutral-100 font-semibold flex-grow\">\r\n\t\t\t\t{title}\r\n\t\t\t</h2>\r\n\t\t\t{/* {!!viewAllHref && !!viewAllLabel && (\r\n\t\t\t\t<a\r\n\t\t\t\t\tclassName=\"flex-shrink-0 block text-primary-700 dark:text-primary-500 font-semibold text-sm\"\r\n\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\thref={viewAllHref}\r\n\t\t\t\t>\r\n\t\t\t\t\t{viewAllLabel}\r\n\t\t\t\t</a>\r\n\t\t\t)} */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default WidgetHeading1;\r\n"],"names":["React","useEffect","__","InputSearchCategories","InputSearchTags","TextControl","Panel","PanelBody","PanelRow","RadioControl","SelectControl","Spinner","RangeControl","InspectorControls","useBlockProps","SelectOrder","useQuery","gql","WidgetCategories","GQL_QUERY_GET_CATEGORIES_BY_FILTER","GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC","GQL_QUERY_GET_TAGS_BY_FILTER","GQL_QUERY_GET_TAGS_BY_SPECIFIC","Edit","props","attributes","setAttributes","clientId","filterDataBy","numberPerPage","order","orderBy","typeOfTerm","categories","tags","termCardName","heading","graphQLvariables","graphQLData","GQL_QUERY__string","GQL_QUERY__string_xxx","variables","orderby","first","Number","termTaxonomId","map","item","value","gqlQuery","loading","error","data","dataLists","edges","queryString","renderFilterPostsContent","label","renderGeneralSetting","renderSidebarSettings","renderPreviewContent","JSON","stringify","useState","_","useLazyQuery","Select","GQL_QUERY_SEARCH_CATEGORIES","onChange","defaultValue","selected","setSelected","searchContent","setSearchContent","loadGreeting","hanleChangeSelect","called","search","categoriesList","length","id","node","databaseId","slug","name","handleInputChange","debounce","e","GQL_QUERY_SEARCH_TAGS","tagsList","setOrder","avatarColors","EDGES_POST_COMMONT_FIELDS","EDGES_TERMS_COMMONT_FIELDS","EDGES_USER_COMMONT_FIELDS","PLLs","GQL_QUERY_GET_POSTS_BY_FILTER","GQL_QUERY_GET_POSTS_BY_SPECIFIC","GQL_QUERY_GET_USERS_BY_FILTER","GQL_QUERY_GET_USERS_BY_SPECIFIC","GQL_QUERY_SEARCH_POSTS","GQL_QUERY_SEARCH_USER","IS_ENABLE_PLL","window","ncmazcoreJsData","pll_current_language","pll_themeoption_actived","PLL_GET__GQL_QUERY_GET_POSTS_BY_FILTER","PLL_GET__GQL_QUERY_GET_POSTS_BY_SPECIFIC","PLL_GET__GQL_QUERY_GET_CATEGORIES_BY_FILTER","PLL_GET__GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC","PLL_GET__GQL_QUERY_GET_TAGS_BY_FILTER","PLL_GET__GQL_QUERY_GET_TAGS_BY_SPECIFIC","PLL_GET__GQL_QUERY_SEARCH_POSTS","PLL_GET__GQL_QUERY_SEARCH_CATEGORIES","PLL_GET__GQL_QUERY_SEARCH_TAGS","CardCategory1","className","size","taxonomyNode","count","link","ncTaxonomyMeta","categoryId","color","featuredImage","sourceUrl","Tag","tagNode","hideCount","WidgetHeading1","renderCard","term","index","title","viewAllLabel","viewAllHref"],"sourceRoot":""}