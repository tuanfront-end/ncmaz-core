{"version":3,"file":"src_block-widget-users_Edit_tsx.js","mappings":"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","sources":["webpack://ncmaz-core/./src/block-widget-users/Edit.tsx","webpack://ncmaz-core/./src/components/InputSearchAuthors.tsx","webpack://ncmaz-core/./src/components/SelectOrder.tsx","webpack://ncmaz-core/./src/contains/common.ts","webpack://ncmaz-core/./src/contains/contants.ts","webpack://ncmaz-core/./src/contains/contantsCommon.ts","webpack://ncmaz-core/./src/contains/contantsPLL.ts","webpack://ncmaz-core/./src/frontend-components/Avatar/Avatar.tsx","webpack://ncmaz-core/./src/frontend-components/CardAuthor/CardAuthor.tsx","webpack://ncmaz-core/./src/frontend-components/WidgetAuthors/WidgetAuthors.tsx","webpack://ncmaz-core/./src/frontend-components/WidgetHeading1/WidgetHeading1.tsx","webpack://ncmaz-core/./src/hooks/useUserGqlQuery.ts"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { __ } from \"@wordpress/i18n\";\r\nimport {\r\n\tTextControl,\r\n\tPanel,\r\n\tPanelBody,\r\n\tPanelRow,\r\n\tRadioControl,\r\n\tSelectControl,\r\n\tSpinner,\r\n\tRangeControl,\r\n} from \"@wordpress/components\";\r\nimport { InspectorControls, useBlockProps } from \"@wordpress/block-editor\";\r\nimport SelectOrder from \"../components/SelectOrder\";\r\nimport InputSearchAuthors from \"../components/InputSearchAuthors\";\r\nimport Select from \"react-select\";\r\nimport WidgetAuthors from \"../frontend-components/WidgetAuthors/WidgetAuthors\";\r\nimport { BlockUserAttributesCommon } from \"../block-users-grid/Edit\";\r\nimport { EditProps } from \"../block-magazine/Edit\";\r\nimport useUserGqlQuery from \"../hooks/useUserGqlQuery\";\r\nimport {\r\n\tOPTIONS_FILTER_DATA_BY,\r\n\tValueOfOptionFilterDataBy,\r\n} from \"../contains/common\";\r\n\r\ninterface Props extends BlockUserAttributesCommon {}\r\n\r\nexport default function Edit(props: EditProps<Props>) {\r\n\tconst { attributes, setAttributes, clientId } = props;\r\n\t//\r\n\tconst {\r\n\t\tfilterDataBy,\r\n\t\tnumberPerPage,\r\n\t\torder,\r\n\t\torderBy,\r\n\t\tuserIds,\r\n\t\troleIn,\r\n\t\theading,\r\n\t} = attributes;\r\n\r\n\t//\r\n\tconst {\r\n\t\tGQL_QUERY__string_text,\r\n\t\tdata,\r\n\t\tdataLists,\r\n\t\terror,\r\n\t\tloading,\r\n\t\tvariables,\r\n\t} = useUserGqlQuery(attributes);\r\n\tconst usersList = dataLists;\r\n\t// ---- SAVE graphQLvariables ----\r\n\tuseEffect(() => {\r\n\t\tif (!data) return;\r\n\t\tsetAttributes({\r\n\t\t\tgraphQLvariables: {\r\n\t\t\t\tvariables,\r\n\t\t\t\tqueryString: GQL_QUERY__string_text,\r\n\t\t\t},\r\n\t\t\texpectedNumberResults: usersList.length || numberPerPage,\r\n\t\t});\r\n\t}, [data]);\r\n\r\n\t//\r\n\tconst handleChangeFilterDataBy = (value: ValueOfOptionFilterDataBy) => {\r\n\t\tsetAttributes({ filterDataBy: value });\r\n\r\n\t\tif (value === \"by_filter\") {\r\n\t\t\tsetAttributes({ userIds: [] });\r\n\t\t}\r\n\t};\r\n\t//\r\n\r\n\tconst renderFilterPostsContent = () => {\r\n\t\tif (filterDataBy === \"by_specific\") {\r\n\t\t\treturn (\r\n\t\t\t\t<InputSearchAuthors\r\n\t\t\t\t\tdefaultValue={userIds}\r\n\t\t\t\t\tonChange={(userIds) => setAttributes({ userIds })}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"w-full space-y-2.5\">\r\n\t\t\t\t<div className=\"w-full space-y-1\">\r\n\t\t\t\t\t<legend>{__(\"Choose user role-in\", \"ncmaz-core\")}</legend>\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tplaceholder=\"Select authors...\"\r\n\t\t\t\t\t\tisMulti\r\n\t\t\t\t\t\tvalue={roleIn}\r\n\t\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t\t{ label: \"ADMINISTRATOR\", value: \"ADMINISTRATOR\" },\r\n\t\t\t\t\t\t\t{ label: \"AUTHOR\", value: \"AUTHOR\" },\r\n\t\t\t\t\t\t\t{ label: \"CONTRIBUTOR\", value: \"CONTRIBUTOR\" },\r\n\t\t\t\t\t\t\t{ label: \"EDITOR\", value: \"EDITOR\" },\r\n\t\t\t\t\t\t\t{ label: \"SUBSCRIBER\", value: \"SUBSCRIBER\" },\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t\tonChange={(roleIn: any) => setAttributes({ roleIn })}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<SelectControl\r\n\t\t\t\t\tlabel={__(\"OrderBy\", \"ncmaz-core\")}\r\n\t\t\t\t\tvalue={orderBy}\r\n\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t{ label: \"DISPLAY_NAME\", value: \"DISPLAY_NAME\" },\r\n\t\t\t\t\t\t{ label: \"EMAIL\", value: \"EMAIL\" },\r\n\t\t\t\t\t\t{ label: \"NICE_NAME\", value: \"NICE_NAME\" },\r\n\t\t\t\t\t\t{ label: \"REGISTERED\", value: \"REGISTERED\" },\r\n\t\t\t\t\t]}\r\n\t\t\t\t\tonChange={(orderBy) => setAttributes({ orderBy })}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t{/* ------- */}\r\n\t\t\t\t<SelectOrder\r\n\t\t\t\t\tdefaultValue={order}\r\n\t\t\t\t\tonChange={(order) => setAttributes({ order })}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t{/* ------- */}\r\n\t\t\t\t<div className=\"w-full space-y-1\">\r\n\t\t\t\t\t<legend>{__(\"Number per page\", \"ncmaz-core\")}</legend>\r\n\t\t\t\t\t<RangeControl\r\n\t\t\t\t\t\tonChange={(numberPerPage) =>\r\n\t\t\t\t\t\t\tsetAttributes({ numberPerPage: numberPerPage })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmin={4}\r\n\t\t\t\t\t\tmax={30}\r\n\t\t\t\t\t\tvalue={numberPerPage}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tconst renderGeneralSetting = () => {\r\n\t\treturn (\r\n\t\t\t<div className=\"space-y-2.5\">\r\n\t\t\t\t<TextControl\r\n\t\t\t\t\tlabel={__(\"Heading\", \"ncmaz-core\")}\r\n\t\t\t\t\tvalue={heading}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tonChange={(heading) => setAttributes({ heading })}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tconst renderSidebarSettings = () => {\r\n\t\treturn (\r\n\t\t\t<InspectorControls key=\"setting\">\r\n\t\t\t\t<div data-type=\"ncmaz-core/sidebar-settings\">\r\n\t\t\t\t\t<Panel header=\"Section settings\">\r\n\t\t\t\t\t\t<PanelBody title=\"General Settings\">\r\n\t\t\t\t\t\t\t<PanelRow>{renderGeneralSetting()}</PanelRow>\r\n\t\t\t\t\t\t</PanelBody>\r\n\t\t\t\t\t\t<PanelBody initialOpen={false} title=\"Filter data settings\">\r\n\t\t\t\t\t\t\t<PanelRow>\r\n\t\t\t\t\t\t\t\t<RadioControl\r\n\t\t\t\t\t\t\t\t\tlabel=\"Users query by\"\r\n\t\t\t\t\t\t\t\t\tselected={filterDataBy}\r\n\t\t\t\t\t\t\t\t\toptions={OPTIONS_FILTER_DATA_BY}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChangeFilterDataBy}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</PanelRow>\r\n\t\t\t\t\t\t\t<div className=\"border-b border-gray-600 mt-3 mb-4\"></div>\r\n\t\t\t\t\t\t\t<PanelRow>{renderFilterPostsContent()}</PanelRow>\r\n\t\t\t\t\t\t</PanelBody>\r\n\t\t\t\t\t</Panel>\r\n\t\t\t\t</div>\r\n\t\t\t</InspectorControls>\r\n\t\t);\r\n\t};\r\n\r\n\tconst renderPreviewContent = () => {\r\n\t\treturn <WidgetAuthors heading={heading} authors={usersList} />;\r\n\t};\r\n\r\n\t//\r\n\treturn (\r\n\t\t<div {...useBlockProps()}>\r\n\t\t\t{renderSidebarSettings()}\r\n\r\n\t\t\t{renderPreviewContent()}\r\n\r\n\t\t\t{loading && <Spinner />}\r\n\t\t\t{error && (\r\n\t\t\t\t<pre className=\"text-xs text-red-500\">\r\n\t\t\t\t\t<code>{JSON.stringify(error)}</code>\r\n\t\t\t\t</pre>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { __ } from \"@wordpress/i18n\";\r\nimport Select from \"react-select\";\r\nimport { GQL_QUERY_SEARCH_USER } from \"../contains/contants\";\r\nimport { gql, useLazyQuery } from \"@apollo/client\";\r\n\r\nconst InputSearchAuthors = ({ onChange, defaultValue = [] }) => {\r\n\tconst [selected, setSelected] = useState(defaultValue);\r\n\tconst [searchContent, setSearchContent] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tonChange && onChange(selected);\r\n\t}, [selected]);\r\n\r\n\t//\r\n\tuseEffect(() => {\r\n\t\tsearchContent && loadGreeting();\r\n\t}, [searchContent]);\r\n\r\n\tconst hanleChangeSelect = (selected) => setSelected(selected);\r\n\r\n\t//\r\n\tlet GQL_QUERY__string = GQL_QUERY_SEARCH_USER;\r\n\tconst gqlQuery = gql`\r\n\t\t${GQL_QUERY__string}\r\n\t`;\r\n\tconst [\r\n\t\tloadGreeting,\r\n\t\t{ loading, error, data, called },\r\n\t] = useLazyQuery(gqlQuery, { variables: { search: searchContent } });\r\n\r\n\tlet usersList = data?.users?.edges || [];\r\n\t// CONVERT\r\n\tif (usersList && usersList.length) {\r\n\t\tusersList = usersList.map((item) => ({\r\n\t\t\tvalue: item.node.userId,\r\n\t\t\tlabel: item.node.name,\r\n\t\t}));\r\n\t}\r\n\r\n\tconst handleInputChange = _.debounce(function (e) {\r\n\t\tsetSearchContent(e);\r\n\t}, 200);\r\n\r\n\treturn (\r\n\t\t<div className=\"w-full space-y-1\">\r\n\t\t\t<legend>{__(\"Type and select authors\", \"ncmaz-core\")}</legend>\r\n\t\t\t<Select\r\n\t\t\t\tplaceholder=\"Select authors...\"\r\n\t\t\t\tisMulti\r\n\t\t\t\tisLoading={loading}\r\n\t\t\t\tvalue={selected}\r\n\t\t\t\tonInputChange={handleInputChange}\r\n\t\t\t\tonChange={hanleChangeSelect}\r\n\t\t\t\toptions={usersList}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default InputSearchAuthors;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"@wordpress/element\";\r\nimport { SelectControl } from \"@wordpress/components\";\r\n\r\nconst SelectOrder = ({ onChange, defaultValue = \"DESC\" }) => {\r\n\tconst [order, setOrder] = useState(defaultValue);\r\n\r\n\tuseEffect(() => {\r\n\t\tonChange && onChange(order);\r\n\t}, [order]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<SelectControl\r\n\t\t\t\tlabel=\"Order\"\r\n\t\t\t\tvalue={order}\r\n\t\t\t\toptions={[\r\n\t\t\t\t\t{ label: \"DESC\", value: \"DESC\" },\r\n\t\t\t\t\t{ label: \"ASC\", value: \"ASC\" },\r\n\t\t\t\t]}\r\n\t\t\t\tonChange={setOrder}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SelectOrder;\r\n","export type ValueOfOptionFilterDataBy = \"by_filter\" | \"by_specific\";\r\n\r\nexport interface OptionFilterDataBy {\r\n\tlabel: string;\r\n\tvalue: ValueOfOptionFilterDataBy;\r\n}\r\n\r\nconst OPTIONS_FILTER_DATA_BY: OptionFilterDataBy[] = [\r\n\t{ label: \"Select posts by specific\", value: \"by_specific\" },\r\n\t{ label: \"Select posts by filter\", value: \"by_filter\" },\r\n];\r\n\r\nexport { OPTIONS_FILTER_DATA_BY };\r\n","declare global {\r\n\tvar ncmazcoreJsData: {\r\n\t\tajaxurl: string;\r\n\t\trestUrl: string;\r\n\t\tgraphQLBasePath: string;\r\n\t\timg_empty_png: string;\r\n\t\timg_musicWave_png: string;\r\n\t\thomeURL: string;\r\n\t\tpll_current_language: string | null;\r\n\t\tpll_themeoption_actived: string | null;\r\n\t};\r\n}\r\n\r\nimport {\r\n\tavatarColors,\r\n\tEDGES_POST_COMMONT_FIELDS,\r\n\tEDGES_TERMS_COMMONT_FIELDS,\r\n\tEDGES_USER_COMMONT_FIELDS,\r\n} from \"./contantsCommon\";\r\nimport { PLLs } from \"./contantsPLL\";\r\n\r\nlet GQL_QUERY_GET_POSTS_BY_FILTER = `\r\n  query GQL_QUERY_GET_POSTS_BY_FILTER(\r\n    $field: PostObjectsConnectionOrderbyEnum = AUTHOR\r\n    $order: OrderEnum = ASC\r\n    $categoryIn: [ID] = []\r\n    $tagIn: [ID] = []\r\n    $authorIn: [ID] = []\r\n    $last: Int = null\r\n    $first: Int = 10\r\n    $before: String = \"\"\r\n    $after: String = \"\"\r\n  ) {\r\n    posts(\r\n      where: {\r\n        orderby: { field: $field, order: $order }\r\n        categoryIn: $categoryIn\r\n        tagIn: $tagIn\r\n        authorIn: $authorIn\r\n      }\r\n      last: $last\r\n      first: $first\r\n      before: $before\r\n      after: $after\r\n    ) {\r\n     ${EDGES_POST_COMMONT_FIELDS}\r\n      pageInfo {\r\n        hasNextPage\r\n        hasPreviousPage\r\n        endCursor\r\n        startCursor\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet GQL_QUERY_GET_POSTS_BY_SPECIFIC = `\r\n  query GQL_QUERY_GET_POSTS_BY_SPECIFIC($nameIn: [String] = \"\") {\r\n    posts(where: { nameIn: $nameIn,  orderby: {order: ASC, field: NAME_IN} }) { ${EDGES_POST_COMMONT_FIELDS} }\r\n  }\r\n`;\r\n\r\n// ===================== USERS =================================================\r\n\r\nlet GQL_QUERY_GET_USERS_BY_FILTER = `query GQL_QUERY_GET_USERS_BY_FILTER(\r\n\t$after: String = \"\"\r\n\t$before: String = \"\"\r\n\t$first: Int = 10\r\n\t$last: Int = null\r\n\t$field: UsersConnectionOrderbyEnum = DISPLAY_NAME\r\n\t$order: OrderEnum = ASC\r\n\t$roleIn: [UserRoleEnum] = []\r\n) {\r\n\tusers(\r\n\t\twhere: { orderby: { field: $field, order: $order }, roleIn: $roleIn }\r\n\t\tlast: $last\r\n\t\tfirst: $first\r\n\t\tbefore: $before\r\n\t\tafter: $after\r\n\t) { ${EDGES_USER_COMMONT_FIELDS} }\r\n}`;\r\n\r\nlet GQL_QUERY_GET_USERS_BY_SPECIFIC = `query GQL_QUERY_GET_USERS_BY_SPECIFIC($include: [Int] = null) {\r\n\tusers(where: { include: $include }) { ${EDGES_USER_COMMONT_FIELDS} }\r\n}`;\r\n\r\n// ===================== TERMS - TAGS | CATEGORIES =========================================\r\n\r\nlet GQL_QUERY_GET_CATEGORIES_BY_FILTER = `\r\n\tquery GQL_QUERY_GET_CATEGORIES_BY_FILTER(\r\n\t\t$order: OrderEnum = ASC\r\n\t\t$orderby: TermObjectsConnectionOrderbyEnum = COUNT\r\n\t\t$after: String = null\r\n\t\t$before: String = null\r\n\t\t$first: Int = 10\r\n\t\t$last: Int = null\r\n\t) {\r\n\t\tcategories(\r\n\t\t\twhere: { order: $order, orderby: $orderby, hideEmpty: true  }\r\n\t\t\tfirst: $first\r\n\t\t\tbefore: $before\r\n\t\t\tafter: $after\r\n\t\t\tlast: $last\r\n\t\t) { ${EDGES_TERMS_COMMONT_FIELDS} }\r\n\t}\r\n`;\r\n\r\nlet GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC = `\r\n\tquery GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC($termTaxonomId: [ID] = \"\") {\r\n\t\tcategories(where: { termTaxonomId: $termTaxonomId }) { ${EDGES_TERMS_COMMONT_FIELDS} }\r\n\t}\r\n`;\r\n\r\n// TAGS\r\nlet GQL_QUERY_GET_TAGS_BY_FILTER = `\r\n\tquery GQL_QUERY_GET_TAGS_BY_FILTER(\r\n\t\t$order: OrderEnum = ASC\r\n\t\t$orderby: TermObjectsConnectionOrderbyEnum = COUNT\r\n\t\t$after: String = null\r\n\t\t$before: String = null\r\n\t\t$first: Int = 10\r\n\t\t$last: Int = null\r\n\t) {\r\n\t\ttags(\r\n\t\t\twhere: { order: $order, orderby: $orderby, hideEmpty: true }\r\n\t\t\tfirst: $first\r\n\t\t\tbefore: $before\r\n\t\t\tafter: $after\r\n\t\t\tlast: $last\r\n\t\t) { ${EDGES_TERMS_COMMONT_FIELDS} }\r\n\t}\r\n`;\r\n\r\nlet GQL_QUERY_GET_TAGS_BY_SPECIFIC = `\r\n\tquery GQL_QUERY_GET_TAGS_BY_SPECIFIC($termTaxonomId: [ID] = \"\") {\r\n\t\ttags(where: { termTaxonomId: $termTaxonomId }) { ${EDGES_TERMS_COMMONT_FIELDS} }\r\n\t}\r\n`;\r\n\r\n// SEARCH\r\nlet GQL_QUERY_SEARCH_POSTS = `\r\n  query GQL_QUERY_SEARCH_POSTS($search: String = \"\") {\r\n    posts(where: {search: $search})\r\n\t{ ${EDGES_POST_COMMONT_FIELDS} }\r\n  }\r\n`;\r\n\r\nlet GQL_QUERY_SEARCH_USER = `\r\n  query GQL_QUERY_SEARCH_USER($search: String = \"\") {\r\n\tusers(where: {search: $search})\r\n\t{ ${EDGES_USER_COMMONT_FIELDS} }\r\n  }\r\n`;\r\n\r\nlet GQL_QUERY_SEARCH_CATEGORIES = `\r\n  query GQL_QUERY_SEARCH_CATEGORIES($search: String = \"\") {\r\n\tcategories(where: {search: $search})\r\n\t{ ${EDGES_TERMS_COMMONT_FIELDS} }\r\n  }\r\n`;\r\n\r\nlet GQL_QUERY_SEARCH_TAGS = `\r\n  query GQL_QUERY_SEARCH_TAGS($search: String = \"\") {\r\n\ttags(where: {search: $search})\r\n\t{ ${EDGES_TERMS_COMMONT_FIELDS} }\r\n  }\r\n`;\r\n\r\n// CHECK ENABLE POLYLANG\r\nlet IS_ENABLE_PLL =\r\n\t!!window.ncmazcoreJsData.pll_current_language &&\r\n\t!!window.ncmazcoreJsData.pll_themeoption_actived;\r\n//\r\nif (IS_ENABLE_PLL) {\r\n\tGQL_QUERY_GET_POSTS_BY_FILTER = PLLs.PLL_GET__GQL_QUERY_GET_POSTS_BY_FILTER;\r\n\tGQL_QUERY_GET_POSTS_BY_SPECIFIC =\r\n\t\tPLLs.PLL_GET__GQL_QUERY_GET_POSTS_BY_SPECIFIC;\r\n\tGQL_QUERY_GET_CATEGORIES_BY_FILTER =\r\n\t\tPLLs.PLL_GET__GQL_QUERY_GET_CATEGORIES_BY_FILTER;\r\n\tGQL_QUERY_GET_CATEGORIES_BY_SPECIFIC =\r\n\t\tPLLs.PLL_GET__GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC;\r\n\tGQL_QUERY_GET_TAGS_BY_FILTER = PLLs.PLL_GET__GQL_QUERY_GET_TAGS_BY_FILTER;\r\n\tGQL_QUERY_GET_TAGS_BY_SPECIFIC = PLLs.PLL_GET__GQL_QUERY_GET_TAGS_BY_SPECIFIC;\r\n\t//\r\n\tGQL_QUERY_SEARCH_POSTS = PLLs.PLL_GET__GQL_QUERY_SEARCH_POSTS;\r\n\tGQL_QUERY_SEARCH_CATEGORIES = PLLs.PLL_GET__GQL_QUERY_SEARCH_CATEGORIES;\r\n\tGQL_QUERY_SEARCH_TAGS = PLLs.PLL_GET__GQL_QUERY_SEARCH_TAGS;\r\n}\r\n\r\nexport {\r\n\tavatarColors,\r\n\t//\r\n\tGQL_QUERY_SEARCH_POSTS,\r\n\tGQL_QUERY_SEARCH_USER,\r\n\t//\r\n\tEDGES_POST_COMMONT_FIELDS,\r\n\tGQL_QUERY_GET_POSTS_BY_FILTER,\r\n\tGQL_QUERY_GET_POSTS_BY_SPECIFIC,\r\n\t//\r\n\tEDGES_USER_COMMONT_FIELDS,\r\n\tGQL_QUERY_GET_USERS_BY_FILTER,\r\n\tGQL_QUERY_GET_USERS_BY_SPECIFIC,\r\n\t//\r\n\tEDGES_TERMS_COMMONT_FIELDS,\r\n\tGQL_QUERY_GET_CATEGORIES_BY_FILTER,\r\n\tGQL_QUERY_GET_CATEGORIES_BY_SPECIFIC,\r\n\tGQL_QUERY_GET_TAGS_BY_FILTER,\r\n\tGQL_QUERY_GET_TAGS_BY_SPECIFIC,\r\n\t//\r\n\tGQL_QUERY_SEARCH_CATEGORIES,\r\n\tGQL_QUERY_SEARCH_TAGS,\r\n};\r\n","let avatarColors = [\r\n\t\"#ffdd00\",\r\n\t\"#fbb034\",\r\n\t\"#ff4c4c\",\r\n\t\"#c1d82f\",\r\n\t\"#f48924\",\r\n\t\"#7ac143\",\r\n\t\"#30c39e\",\r\n\t\"#06BCAE\",\r\n\t\"#0695BC\",\r\n\t\"#037ef3\",\r\n\t\"#146eb4\",\r\n\t\"#8e43e7\",\r\n\t\"#ea1d5d\",\r\n\t\"#fc636b\",\r\n\t\"#ff6319\",\r\n\t\"#e01f3d\",\r\n\t\"#a0ac48\",\r\n\t\"#00d1b2\",\r\n\t\"#472f92\",\r\n\t\"#388ed1\",\r\n\t\"#a6192e\",\r\n\t\"#4a8594\",\r\n\t\"#7B9FAB\",\r\n\t\"#1393BD\",\r\n\t\"#5E13BD\",\r\n\t\"#E208A7\",\r\n];\r\n\r\n// ===================== POSTS =================================================\r\nlet EDGES_POST_COMMONT_FIELDS = ` edges {\r\n  node {\r\n    id\r\n    link\r\n    author {\r\n      node {\r\n        id\r\n        avatar {\r\n          url\r\n        }\r\n        url\r\n        uri\r\n        username\r\n        name\r\n        slug\r\n        ncUserMeta {\r\n          featuredImage {\r\n            sourceUrl\r\n          }\r\n        }\r\n      }\r\n    }\r\n    categories {\r\n      edges {\r\n        node {\r\n          id\r\n          link\r\n          name\r\n          uri\r\n          slug\r\n          count\r\n          categoryId\r\n          ncTaxonomyMeta {\r\n            color\r\n          }\r\n        }\r\n      }\r\n    }\r\n    commentCount\r\n    date\r\n    excerpt\r\n    featuredImage {\r\n      node {\r\n        id\r\n        altText\r\n        caption\r\n        sourceUrl\r\n      }\r\n    }\r\n    postFormats {\r\n      edges {\r\n        node {\r\n          id\r\n          name\r\n          slug\r\n        }\r\n      }\r\n    }\r\n    postId\r\n    slug\r\n    title\r\n    ncmazVideoUrl {\r\n      fieldGroupName\r\n      videoUrl\r\n    }\r\n    ncmazAudioUrl {\r\n      fieldGroupName\r\n      audioUrl\r\n    }\r\n    ncPostMetaData {\r\n      favoriteButtonShortcode\r\n      readingTimeShortcode\r\n      viewsCount\r\n      fieldGroupName\r\n    }\r\n    ncmazGalleryImgs {\r\n      fieldGroupName\r\n      image1 {\r\n        id\r\n        sourceUrl\r\n      }\r\n      image2 {\r\n        id\r\n        sourceUrl\r\n      }\r\n      image3 {\r\n        id\r\n        sourceUrl\r\n      }\r\n      image4 {\r\n        id\r\n        sourceUrl\r\n      }\r\n      image5 {\r\n        id\r\n        sourceUrl\r\n      }\r\n      image6 {\r\n        id\r\n        sourceUrl\r\n      }\r\n      image7 {\r\n        id\r\n        sourceUrl\r\n      }\r\n      image8 {\r\n        id\r\n        sourceUrl\r\n      }\r\n    }\r\n  }\r\n}`;\r\n\r\n// ===================== USERS =================================================\r\nlet EDGES_USER_COMMONT_FIELDS = `edges {\r\n\tnode {\r\n\t\tid\r\n\t\tname\r\n\t\tusername\r\n\t\tuserId\r\n\t\turl\r\n\t\turi\r\n    ncUserMeta {\r\n\t\t\tcolor\r\n\t\t\tncBio\r\n\t\t\tfeaturedImage {\r\n\t\t\t\tsourceUrl\r\n\t\t\t\tid\r\n\t\t\t}\r\n\t\t\tbackgroundImage {\r\n\t\t\t\tsourceUrl\r\n\t\t\t}\r\n\t\t}\r\n    posts {\r\n      pageInfo {\r\n        total\r\n      }\r\n    }\r\n\t}\r\n}`;\r\n\r\n// ===================== TERMS - TAGS | CATEGORIES =========================================\r\nlet EDGES_TERMS_COMMONT_FIELDS = `edges {\r\n    node {\r\n        id\r\n        slug\r\n        count\r\n        name\r\n        databaseId\r\n        description\r\n        link\r\n        ncTaxonomyMeta {\r\n            color                                     \r\n            featuredImage {\r\n                sourceUrl\r\n            }\r\n        }\r\n    }\r\n}`;\r\n\r\nexport {\r\n\tavatarColors,\r\n\t//\r\n\tEDGES_POST_COMMONT_FIELDS,\r\n\t//\r\n\tEDGES_USER_COMMONT_FIELDS,\r\n\t//\r\n\tEDGES_TERMS_COMMONT_FIELDS,\r\n};\r\n","import {\n\tEDGES_POST_COMMONT_FIELDS,\n\tEDGES_TERMS_COMMONT_FIELDS,\n} from \"./contantsCommon\";\n\nconst GQL_QUERY_GET_POSTS_BY_FILTER = `\n  query GQL_QUERY_GET_POSTS_BY_FILTER(\n    $language: LanguageCodeFilterEnum = ${window.ncmazcoreJsData.pll_current_language}\n    $field: PostObjectsConnectionOrderbyEnum = AUTHOR\n    $order: OrderEnum = ASC\n    $categoryIn: [ID] = []\n    $tagIn: [ID] = []\n    $authorIn: [ID] = []\n    $last: Int = null\n    $first: Int = 10\n    $before: String = \"\"\n    $after: String = \"\"\n  ) {\n    posts(\n      where: {\n        language: $language\n        orderby: { field: $field, order: $order }\n        categoryIn: $categoryIn\n        tagIn: $tagIn\n        authorIn: $authorIn\n      }\n      last: $last\n      first: $first\n      before: $before\n      after: $after\n    ) {\n     ${EDGES_POST_COMMONT_FIELDS}\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        endCursor\n        startCursor\n      }\n    }\n  }\n`;\n\nconst GQL_QUERY_GET_POSTS_BY_SPECIFIC = `\n  query GQL_QUERY_GET_POSTS_BY_SPECIFIC(\n    $language: LanguageCodeFilterEnum = ${window.ncmazcoreJsData.pll_current_language}\n    $nameIn: [String] = \"\"\n    ) {\n    posts(where: {\n      language: $language\n      nameIn: $nameIn\n      orderby: {order: ASC, field: NAME_IN}\n     }) { ${EDGES_POST_COMMONT_FIELDS} }\n  }\n`;\n\n// ===================== TERMS - TAGS | CATEGORIES =========================================\n\nconst GQL_QUERY_GET_CATEGORIES_BY_FILTER = `\n\tquery GQL_QUERY_GET_CATEGORIES_BY_FILTER(\n    $language: LanguageCodeFilterEnum = ${window.ncmazcoreJsData.pll_current_language}\n\t\t$order: OrderEnum = ASC\n\t\t$orderby: TermObjectsConnectionOrderbyEnum = COUNT\n\t\t$after: String = null\n\t\t$before: String = null\n\t\t$first: Int = 10\n\t\t$last: Int = null\n\t) {\n\t\tcategories(\n\t\t\twhere: { \n        language: $language,\n        order: $order,\n        orderby: $orderby \n      }\n\t\t\tfirst: $first\n\t\t\tbefore: $before\n\t\t\tafter: $after\n\t\t\tlast: $last\n\t\t) { ${EDGES_TERMS_COMMONT_FIELDS} }\n\t}\n`;\n\nconst GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC = `\n\tquery GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC(\n    $language: LanguageCodeFilterEnum = ${window.ncmazcoreJsData.pll_current_language}\n    $termTaxonomId: [ID] = \"\"\n    ) {\n\t\tcategories(where: {\n      language: $language\n      termTaxonomId: $termTaxonomId\n     }) { ${EDGES_TERMS_COMMONT_FIELDS} }\n\t}\n`;\n\n// TAGS\nconst GQL_QUERY_GET_TAGS_BY_FILTER = `\n\tquery GQL_QUERY_GET_TAGS_BY_FILTER(\n    $language: LanguageCodeFilterEnum = ${window.ncmazcoreJsData.pll_current_language}\n\t\t$order: OrderEnum = ASC\n\t\t$orderby: TermObjectsConnectionOrderbyEnum = COUNT\n\t\t$after: String = null\n\t\t$before: String = null\n\t\t$first: Int = 10\n\t\t$last: Int = null\n\t) {\n\t\ttags(\n\t\t\twhere: {\n        language: $language \n        order: $order\n        orderby: $orderby \n      }\n\t\t\tfirst: $first\n\t\t\tbefore: $before\n\t\t\tafter: $after\n\t\t\tlast: $last\n\t\t) { ${EDGES_TERMS_COMMONT_FIELDS} }\n\t}\n`;\n\nconst GQL_QUERY_GET_TAGS_BY_SPECIFIC = `\n\tquery GQL_QUERY_GET_TAGS_BY_SPECIFIC(\n    $language: LanguageCodeFilterEnum = ${window.ncmazcoreJsData.pll_current_language}\n    $termTaxonomId: [ID] = \"\"\n    ) {\n\t\ttags(where: {\n      language: $language\n      termTaxonomId: $termTaxonomId\n    }) { ${EDGES_TERMS_COMMONT_FIELDS} }\n\t}\n`;\n\n// SEARCH\n\nlet GQL_QUERY_SEARCH_POSTS = `\n  query GQL_QUERY_SEARCH_POSTS($search: String = \"\", $language: LanguageCodeFilterEnum = ${window.ncmazcoreJsData.pll_current_language}) {\n    posts(where: {search: $search,  language: $language})\n\t{ ${EDGES_POST_COMMONT_FIELDS} }\n  }\n`;\n\nlet GQL_QUERY_SEARCH_CATEGORIES = `\n  query GQL_QUERY_SEARCH_CATEGORIES($search: String = \"\", $language: LanguageCodeFilterEnum = ${window.ncmazcoreJsData.pll_current_language}) {\n\tcategories(where: {language: $language, search: $search})\n\t{ ${EDGES_TERMS_COMMONT_FIELDS} }\n  }\n`;\nlet GQL_QUERY_SEARCH_TAGS = `\n  query GQL_QUERY_SEARCH_TAGS($search: String = \"\", $language: LanguageCodeFilterEnum = ${window.ncmazcoreJsData.pll_current_language}) {\n\ttags(where: {language: $language, search: $search})\n\t{ ${EDGES_TERMS_COMMONT_FIELDS} }\n  }\n`;\n\nexport const PLLs = {\n\tPLL_GET__GQL_QUERY_GET_POSTS_BY_FILTER: GQL_QUERY_GET_POSTS_BY_FILTER,\n\tPLL_GET__GQL_QUERY_GET_POSTS_BY_SPECIFIC: GQL_QUERY_GET_POSTS_BY_SPECIFIC,\n\n\t//\n\tPLL_GET__GQL_QUERY_GET_CATEGORIES_BY_FILTER: GQL_QUERY_GET_CATEGORIES_BY_FILTER,\n\tPLL_GET__GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC: GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC,\n\tPLL_GET__GQL_QUERY_GET_TAGS_BY_FILTER: GQL_QUERY_GET_TAGS_BY_FILTER,\n\tPLL_GET__GQL_QUERY_GET_TAGS_BY_SPECIFIC: GQL_QUERY_GET_TAGS_BY_SPECIFIC,\n\t//\n\tPLL_GET__GQL_QUERY_SEARCH_CATEGORIES: GQL_QUERY_SEARCH_CATEGORIES,\n\tPLL_GET__GQL_QUERY_SEARCH_TAGS: GQL_QUERY_SEARCH_TAGS,\n\tPLL_GET__GQL_QUERY_SEARCH_POSTS: GQL_QUERY_SEARCH_POSTS,\n};\n","import React, { FC } from \"react\";\r\nimport { avatarColors } from \"../../contains/contants\";\r\nconst Avatar = ({\r\n\tcontainerClassName = \"ring-1 ring-white dark:ring-neutral-900\",\r\n\tsizeClass = \"h-6 w-6 text-sm\",\r\n\tradius = \"rounded-md\",\r\n\timgUrl,\r\n\tuserName,\r\n}) => {\r\n\tconst url = imgUrl || \"\";\r\n\tconst name = userName || \"John Doe\";\r\n\tconst _setBgColor = (name) => {\r\n\t\tconst backgroundIndex = Math.floor(\r\n\t\t\tname.charCodeAt(0) % avatarColors.length\r\n\t\t);\r\n\t\treturn avatarColors[backgroundIndex];\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`wil-avatar relative flex-shrink-0 inline-flex items-center justify-center overflow-hidden text-neutral-100 uppercase font-semibold shadow-inner ${radius} ${sizeClass} ${containerClassName}`}\r\n\t\t\tstyle={{ backgroundColor: url ? undefined : _setBgColor(name) }}\r\n\t\t>\r\n\t\t\t{url && (\r\n\t\t\t\t<img\r\n\t\t\t\t\tclassName=\"absolute inset-0 w-full h-full object-cover\"\r\n\t\t\t\t\tsrc={url}\r\n\t\t\t\t\talt={name}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t<span className=\"wil-avatar__name\">{name[0]}</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Avatar;\r\n","import React, { FC } from \"react\";\r\nimport Avatar from \"../Avatar/Avatar\";\r\n\r\nconst CardAuthor = ({ className = \"\", author }) => {\r\n\tif (!author) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst { avatar, id, name, ncUserMeta, url, uri, userId, username } = author;\r\n\tconst { color, featuredImage, ncBio } = ncUserMeta;\r\n\r\n\treturn (\r\n\t\t<a\r\n\t\t\thref={url + uri}\r\n\t\t\tclassName={`nc-CardAuthor flex items-center ${className}`}\r\n\t\t\tdata-nc-id=\"CardAuthor\"\r\n\t\t>\r\n\t\t\t<Avatar\r\n\t\t\t\tsizeClass=\"h-10 w-10 text-base\"\r\n\t\t\t\tcontainerClassName=\"flex-shrink-0 mr-4\"\r\n\t\t\t\tradius=\"rounded-full\"\r\n\t\t\t\timgUrl={avatar?.url}\r\n\t\t\t\tuserName={username}\r\n\t\t\t/>\r\n\t\t\t<div>\r\n\t\t\t\t<h2\r\n\t\t\t\t\tclassName={`text-base text-neutral-900 dark:text-neutral-100 font-semibold`}\r\n\t\t\t\t>\r\n\t\t\t\t\t{name}\r\n\t\t\t\t</h2>\r\n\t\t\t\t<span\r\n\t\t\t\t\tclassName={`block mt-[2px] text-xs text-neutral-500 dark:text-neutral-400`}\r\n\t\t\t\t>\r\n\t\t\t\t\t{ncBio}\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t</a>\r\n\t);\r\n};\r\n\r\nexport default CardAuthor;\r\n","import React, { FC } from \"react\";\r\nimport CardAuthor from \"../CardAuthor/CardAuthor\";\r\nimport WidgetHeading1 from \"../WidgetHeading1/WidgetHeading1\";\r\n\r\nconst WidgetAuthors = ({\r\n\tclassName = \"bg-neutral-100 dark:bg-neutral-800\",\r\n\theading = \"\",\r\n\tauthors,\r\n}) => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`nc-WidgetAuthors rounded-3xl overflow-hidden ${className}`}\r\n\t\t\tdata-nc-id=\"WidgetAuthors\"\r\n\t\t>\r\n\t\t\t{!!heading && <WidgetHeading1 title={heading} />}\r\n\t\t\t<div className=\"flow-root\">\r\n\t\t\t\t<div className=\"flex flex-col divide-y divide-neutral-200 dark:divide-neutral-700\">\r\n\t\t\t\t\t{authors.map((author, index) => (\r\n\t\t\t\t\t\t<CardAuthor\r\n\t\t\t\t\t\t\tclassName=\"p-4 xl:p-5 hover:bg-neutral-200 dark:hover:bg-neutral-700\"\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\tauthor={author?.node}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default WidgetAuthors;\r\n","import React, { FC } from \"react\";\r\n\r\nconst WidgetHeading1 = ({\r\n\tclassName = \"\",\r\n\ttitle,\r\n\tviewAllLabel,\r\n\tviewAllHref,\r\n}) => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`nc-WidgetHeading1 flex items-center justify-between p-4 xl:p-5 border-b border-neutral-200 dark:border-neutral-700 ${className}`}\r\n\t\t\tdata-nc-id=\"WidgetHeading1\"\r\n\t\t>\r\n\t\t\t<h2 className=\"text-lg text-neutral-900 dark:text-neutral-100 font-semibold flex-grow\">\r\n\t\t\t\t{title}\r\n\t\t\t</h2>\r\n\t\t\t{/* {!!viewAllHref && !!viewAllLabel && (\r\n\t\t\t\t<a\r\n\t\t\t\t\tclassName=\"flex-shrink-0 block text-primary-700 dark:text-primary-500 font-semibold text-sm\"\r\n\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\thref={viewAllHref}\r\n\t\t\t\t>\r\n\t\t\t\t\t{viewAllLabel}\r\n\t\t\t\t</a>\r\n\t\t\t)} */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default WidgetHeading1;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport {\r\n\tGQL_QUERY_GET_USERS_BY_FILTER,\r\n\tGQL_QUERY_GET_USERS_BY_SPECIFIC,\r\n} from \"../contains/contants\";\r\nimport { BlockUserAttributesCommon } from \"../block-users-grid/Edit\";\r\n\r\nexport interface ListUsersGQLResultData {\r\n\tusers: Users;\r\n}\r\n\r\nexport interface Users {\r\n\tedges: Edge[];\r\n\t__typename: string;\r\n}\r\nexport interface Edge {\r\n\tnode: AuthorNode;\r\n\t__typename: string;\r\n}\r\n\r\n// COPY tu ncmaz-frontend nen type nay co the khong chinh xac hoan toan\r\nexport interface AuthorNode {\r\n\tid: string;\r\n\tname: string;\r\n\tavatar?: any;\r\n\tncUserMeta: any;\r\n\turl: string;\r\n\turi: string;\r\n\tusername: string;\r\n\tdescription?: string;\r\n\tuserId: number;\r\n\tposts?: {\r\n\t\tpageInfo: {\r\n\t\t\ttotal: number;\r\n\t\t};\r\n\t};\r\n}\r\n\r\nexport default function useUserGqlQuery(attributes: BlockUserAttributesCommon) {\r\n\tconst {\r\n\t\tfilterDataBy,\r\n\t\tnumberPerPage,\r\n\t\torder,\r\n\t\torderBy,\r\n\t\tuserIds,\r\n\t\troleIn,\r\n\t} = attributes;\r\n\t//\r\n\tlet GQL_QUERY__string = \"\";\r\n\tlet GQL_QUERY__string_text = \"\";\r\n\tlet variables = {};\r\n\t//\r\n\r\n\tif (filterDataBy === \"by_specific\") {\r\n\t\tvariables = { include: userIds.map((item) => item.value) };\r\n\t\tGQL_QUERY__string = GQL_QUERY_GET_USERS_BY_SPECIFIC;\r\n\t\tGQL_QUERY__string_text = \"GQL_QUERY_GET_USERS_BY_SPECIFIC\";\r\n\t} else {\r\n\t\tGQL_QUERY__string = GQL_QUERY_GET_USERS_BY_FILTER;\r\n\t\tGQL_QUERY__string_text = \"GQL_QUERY_GET_USERS_BY_FILTER\";\r\n\t\tvariables = {\r\n\t\t\tfirst: numberPerPage,\r\n\t\t\tfield: orderBy,\r\n\t\t\torder: order,\r\n\t\t\troleIn: roleIn.map((item) => item.value),\r\n\t\t};\r\n\t}\r\n\r\n\t// =================== QUERY GRAPHQL ===================\r\n\tconst gqlQuery = gql`\r\n\t\t${GQL_QUERY__string}\r\n\t`;\r\n\tconst { loading, error, data } = useQuery<ListUsersGQLResultData>(gqlQuery, {\r\n\t\tvariables,\r\n\t});\r\n\r\n\tconst dataLists = data?.users?.edges || [];\r\n\r\n\treturn {\r\n\t\tGQL_QUERY__string, // for debug\r\n\t\tGQL_QUERY__string_text,\r\n\t\tvariables,\r\n\t\tloading,\r\n\t\terror,\r\n\t\tdata,\r\n\t\tdataLists,\r\n\t};\r\n}\r\n"],"names":["React","useEffect","__","TextControl","Panel","PanelBody","PanelRow","RadioControl","SelectControl","Spinner","RangeControl","InspectorControls","useBlockProps","SelectOrder","InputSearchAuthors","Select","WidgetAuthors","useUserGqlQuery","OPTIONS_FILTER_DATA_BY","Edit","props","attributes","setAttributes","clientId","filterDataBy","numberPerPage","order","orderBy","userIds","roleIn","heading","GQL_QUERY__string_text","data","dataLists","error","loading","variables","usersList","graphQLvariables","queryString","expectedNumberResults","length","handleChangeFilterDataBy","value","renderFilterPostsContent","label","renderGeneralSetting","renderSidebarSettings","renderPreviewContent","JSON","stringify","useState","_","GQL_QUERY_SEARCH_USER","gql","useLazyQuery","onChange","defaultValue","selected","setSelected","searchContent","setSearchContent","loadGreeting","hanleChangeSelect","GQL_QUERY__string","gqlQuery","called","search","users","edges","map","item","node","userId","name","handleInputChange","debounce","e","setOrder","avatarColors","EDGES_POST_COMMONT_FIELDS","EDGES_TERMS_COMMONT_FIELDS","EDGES_USER_COMMONT_FIELDS","PLLs","GQL_QUERY_GET_POSTS_BY_FILTER","GQL_QUERY_GET_POSTS_BY_SPECIFIC","GQL_QUERY_GET_USERS_BY_FILTER","GQL_QUERY_GET_USERS_BY_SPECIFIC","GQL_QUERY_GET_CATEGORIES_BY_FILTER","GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC","GQL_QUERY_GET_TAGS_BY_FILTER","GQL_QUERY_GET_TAGS_BY_SPECIFIC","GQL_QUERY_SEARCH_POSTS","GQL_QUERY_SEARCH_CATEGORIES","GQL_QUERY_SEARCH_TAGS","IS_ENABLE_PLL","window","ncmazcoreJsData","pll_current_language","pll_themeoption_actived","PLL_GET__GQL_QUERY_GET_POSTS_BY_FILTER","PLL_GET__GQL_QUERY_GET_POSTS_BY_SPECIFIC","PLL_GET__GQL_QUERY_GET_CATEGORIES_BY_FILTER","PLL_GET__GQL_QUERY_GET_CATEGORIES_BY_SPECIFIC","PLL_GET__GQL_QUERY_GET_TAGS_BY_FILTER","PLL_GET__GQL_QUERY_GET_TAGS_BY_SPECIFIC","PLL_GET__GQL_QUERY_SEARCH_POSTS","PLL_GET__GQL_QUERY_SEARCH_CATEGORIES","PLL_GET__GQL_QUERY_SEARCH_TAGS","Avatar","containerClassName","sizeClass","radius","imgUrl","userName","url","_setBgColor","backgroundIndex","Math","floor","charCodeAt","backgroundColor","undefined","CardAuthor","className","author","avatar","id","ncUserMeta","uri","username","color","featuredImage","ncBio","WidgetHeading1","authors","index","title","viewAllLabel","viewAllHref","useQuery","include","first","field"],"sourceRoot":""}